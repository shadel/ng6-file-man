{"version":3,"sources":["ng://ng6-file-man/file-manager/reducers/actions.action.ts","ng://ng6-file-man/file-manager/services/node.service.ts","ng://ng6-file-man/file-manager/services/node-clicked.service.ts","ng://ng6-file-man/file-manager/file-manager.component.ts","ng://ng6-file-man/file-manager/components/folder-content/folder-content.component.ts","ng://ng6-file-man/file-manager/components/tree/tree.component.ts","ng://ng6-file-man/file-manager/components/tree/node-lister/node-lister.component.ts","ng://ng6-file-man/file-manager/components/functions/node/node.component.ts","ng://ng6-file-man/file-manager/pipes/map-to-iterable.pipe.ts","ng://ng6-file-man/file-manager/components/nav-bar/nav-bar.component.ts","null","ng://ng6-file-man/file-manager/reducers/stateReducer.ts","ng://ng6-file-man/file-manager/reducers/reducer.factory.ts","ng://ng6-file-man/file-manager/components/functions/loading-overlay/loading-overlay.component.ts","ng://ng6-file-man/file-manager/pipes/file-size.pipe.ts","ng://ng6-file-man/file-manager/components/functions/upload/upload.component.ts","ng://ng6-file-man/file-manager/components/functions/upload/new-folder/new-folder.component.ts","ng://ng6-file-man/file-manager/components/side-view/side-view.component.ts","ng://ng6-file-man/file-manager/components/navigation/navigation.component.ts","ng://ng6-file-man/file-manager/file-manager.module.ts","ng://ng6-file-man/file-manager/models/tree.model.ts"],"names":["SET_PATH","SET_LOADING_STATE","SET_SELECTED_NODE","NodeService","http","store","_this","this","getNodesFromServer","path","folderId","findNodeByPath","id","get","tree","config","baseURL","api","listFile","params","HttpParams","set","prototype","startManagerAt","dispatch","type","ACTIONS.SET_PATH","payload","refreshCurrentPath","currentPath","children","getNodes","parseNodes","subscribe","data","i","length","parentPath","getParentPath","pathToNode","name","split","slice","join","Observable","observer","next","map","node","createNode","ACTIONS.SET_LOADING_STATE","console","warn","ids","splice","cachedNode","isFolder","dir","isExpanded","pathToParent","nodePath","nodes","reduce","value","index","findNodeById","result","findNodeByIdHelper","keys","Object","obj","foldRecursively","child","hasOwnProperty","document","getElementById","classList","add","foldAll","defineProperty","_path","Injectable","args","providedIn","HttpClient","Store","NodeClickedService","ngxSmartModalService","nodeService","startDownload","parameters","parseParams","reachServer","downloadFile","initDelete","sideEffectHelper","deleteFile","successWithModalClose","searchForString","input","query","searchFiles","res","searchSuccess","createFolder","currentParent","newDirName","dirName","rename","newName","renameFile","httpMethod","apiURL","successMethod","failMethod","a","actionSuccess","b","actionFailed","getModal","open","err","method","apiUrl","toLowerCase","post","delete","window","filter","item","key","remove","searchString","response","setModalData","body","close","error","NgxSmartModalService","FileManagerComponent","nodeClickedService","isPopup","itemClicked","EventEmitter","sideMenuClosed","fmOpen","newDialog","ngOnInit","log","pipe","select","state","fileManagerState","isLoading","loading","selectedNode","stayOpen","handleFileManagerClickEvent","onItemClicked","event","emit","searchClicked","ACTIONS.SET_SELECTED_NODE","nodeClickHandler","highlightSelected","parentId","closing","parentNode","treeElement","fcElement","removeClass","highilghtChildElement","parentElement","el","light","prefix","fullId","className","Array","from","getElementsByClassName","fmShowHide","backdropClicked","handleUploadDialog","Component","selector","template","styles","encapsulation","ViewEncapsulation","None","Input","Output","FolderContentComponent","openUploadDialog","newClickedAction","TreeComponent","currentTreeLevel","treeModel","ngAfterViewInit","first","ContentChild","TemplateRef","NodeListerComponent","NodeComponent","isSingleClick","method1CallForClick","preventDefault","setTimeout","showMenu","method2CallForDblClick","toggleNodeExpanded","setNodeSelectedState","MapToIterablePipe","transform","dict","push","val","Pipe","NavBarComponent","onClick","newPath","__assign","assign","t","s","n","arguments","p","call","apply","initialState","stateReducer","action","reducers","LoadingOverlayComponent","timer","timeoutMessage","_","FileSizePipe","units","bytes","precision","isNaN","parseFloat","String","isFinite","unit","toFixed","UploadComponent","closeDialog","createDir","newFolder","counter","uploader","FineUploader","debug","autoUpload","maxConnections","element","request","endpoint","uploadFile","paramsInBody","getCurrentPath","retry","enableAuto","callbacks","onSubmitted","onCancel","onAllComplete","succ","fail","uploadFiles","uploadStoredFiles","createNewFolder","cancelAll","NewFolderComponent","buttonClicked","buttonText","toString","inputValue","uploadFolder","onInputChange","target","ViewChild","SideViewComponent","allowFolderDownload","clickEvent","NavigationComponent","FEATURE_REDUCER_TOKEN","InjectionToken","getReducers","FileManagerModule","forRoot","ngModule","providers","NgModule","imports","HttpClientModule","StoreModule","CommonModule","NgxSmartModalModule","declarations","exports","provide","useFactory","TreeModel","_currentPath","_nodes","_selectedNodeId"],"mappings":"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","sourcesContent":["import {ActionInterface} from '../interfaces/action.interface';\r\nimport {NodeInterface} from '../interfaces/node.interface';\r\n\r\nexport const SET_PATH = 'SET_PATH';\r\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\r\nexport const SET_SELECTED_NODE = 'SET_SELECTED_NODE';\r\n\r\nexport class SetPath implements ActionInterface {\r\n  readonly type = SET_PATH;\r\n  payload: string;\r\n}\r\n\r\nexport class SetLoadingState implements ActionInterface {\r\n  readonly type = SET_LOADING_STATE;\r\n  payload: boolean;\r\n}\r\n\r\nexport class SetSelectedNode implements ActionInterface {\r\n  readonly type = SET_SELECTED_NODE;\r\n  payload: NodeInterface;\r\n}\r\n\r\nexport type Actions = SetPath | SetLoadingState | SetSelectedNode;\r\n","import {Injectable} from '@angular/core';\r\nimport {NodeInterface} from '../interfaces/node.interface';\r\nimport {Observable} from 'rxjs';\r\nimport {TreeModel} from '../models/tree.model';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport * as ACTIONS from '../reducers/actions.action';\r\nimport {Store} from '@ngrx/store';\r\nimport {AppStore} from '../reducers/reducer.factory';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NodeService {\r\n  public tree: TreeModel;\r\n  private _path: string;\r\n\r\n  constructor(private http: HttpClient, private store: Store<AppStore>) {\r\n  }\r\n\r\n  // todo ask server to get parent structure\r\n  public startManagerAt(path: string) {\r\n    this.store.dispatch({type: ACTIONS.SET_PATH, payload: path});\r\n  }\r\n\r\n  public refreshCurrentPath() {\r\n    this.findNodeByPath(this.currentPath).children = {};\r\n    this.getNodes(this.currentPath);\r\n  }\r\n\r\n  getNodes(path: string) {\r\n    this.parseNodes(path).subscribe((data: Array<NodeInterface>) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const parentPath = this.getParentPath(data[i].pathToNode);\r\n        this.findNodeByPath(parentPath).children[data[i].name] = data[i];\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentPath(path: string): string {\r\n    let parentPath = path.split('/');\r\n    parentPath = parentPath.slice(0, parentPath.length - 1);\r\n    return parentPath.join('/');\r\n  }\r\n\r\n  private parseNodes(path: string): Observable<NodeInterface[]> {\r\n    return new Observable(observer => {\r\n      this.getNodesFromServer(path).subscribe((data: Array<any>) => {\r\n        observer.next(data.map(node => this.createNode(path, node)));\r\n        this.store.dispatch({type: ACTIONS.SET_LOADING_STATE, payload: false});\r\n      });\r\n    });\r\n  }\r\n\r\n  private createNode(path, node): NodeInterface {\r\n    if (node.path[0] !== '/') {\r\n      console.warn('[Node Service] Server should return initial path with \"/\"');\r\n      node.path = '/' + node.path;\r\n    }\r\n\r\n    const ids = node.path.split('/');\r\n    if (ids.length > 2 && ids[ids.length - 1] === '') {\r\n      ids.splice(-1, 1);\r\n      node.path = ids.join('/');\r\n    }\r\n\r\n    const cachedNode = this.findNodeByPath(node.path);\r\n\r\n    return <NodeInterface>{\r\n      id: node.id,\r\n      isFolder: node.dir,\r\n      isExpanded: cachedNode ? cachedNode.isExpanded : false,\r\n      pathToNode: node.path,\r\n      pathToParent: this.getParentPath(node.path),\r\n      name: node.name || node.id,\r\n      children: cachedNode ? cachedNode.children : {}\r\n    };\r\n  }\r\n\r\n  private getNodesFromServer = (path: string) => {\r\n    let folderId: any = this.findNodeByPath(path).id;\r\n    folderId = folderId === 0 ? '' : folderId;\r\n\r\n    return this.http.get(\r\n      this.tree.config.baseURL + this.tree.config.api.listFile,\r\n      {params: new HttpParams().set('parentPath', folderId)}\r\n    );\r\n  };\r\n\r\n  public findNodeByPath(nodePath: string): NodeInterface {\r\n    const ids = nodePath.split('/');\r\n    ids.splice(0, 1);\r\n\r\n    return ids.length === 0 ? this.tree.nodes : ids.reduce((value, index) => value['children'][index], this.tree.nodes);\r\n  }\r\n\r\n  public findNodeById(id: number): NodeInterface {\r\n    const result = this.findNodeByIdHelper(id);\r\n\r\n    if (result === null) {\r\n      console.warn('[Node Service] Cannot find node by id. Id not existing or not fetched. Returning root.');\r\n      return this.tree.nodes;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public findNodeByIdHelper(id: number, node: NodeInterface = this.tree.nodes): NodeInterface {\r\n    if (node.id === id)\r\n      return node;\r\n\r\n    const keys = Object.keys(node.children);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (typeof node.children[keys[i]] == 'object') {\r\n        const obj = this.findNodeByIdHelper(id, node.children[keys[i]]);\r\n        if (obj != null)\r\n          return obj;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public foldRecursively(node: NodeInterface) {\r\n    // console.log('folding ', node);\r\n    const children = node.children;\r\n\r\n    Object.keys(children).map((child: string) => {\r\n      if (!children.hasOwnProperty(child) || !children[child].isExpanded) {\r\n        return null;\r\n      }\r\n\r\n      this.foldRecursively(children[child]);\r\n      //todo put this getElById into one func (curr inside node.component.ts + fm.component.ts) - this won't be maintainable\r\n      document.getElementById('tree_' + children[child].pathToNode).classList.add('deselected');\r\n      children[child].isExpanded = false;\r\n    });\r\n  }\r\n\r\n  public foldAll() {\r\n    this.foldRecursively(this.tree.nodes);\r\n  }\r\n\r\n  get currentPath(): string {\r\n    return this._path;\r\n  }\r\n\r\n  set currentPath(value: string) {\r\n    this._path = value;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NodeInterface} from '../interfaces/node.interface';\r\nimport {NodeService} from './node.service';\r\nimport {TreeModel} from '../models/tree.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {NgxSmartModalService} from 'ngx-smart-modal';\r\nimport {AppStore} from '../reducers/reducer.factory';\r\nimport {Store} from '@ngrx/store';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NodeClickedService {\r\n  public tree: TreeModel;\r\n\r\n  constructor(\r\n    public ngxSmartModalService: NgxSmartModalService,\r\n    private nodeService: NodeService,\r\n    private store: Store<AppStore>,\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  public startDownload(node: NodeInterface): void {\r\n    const parameters = this.parseParams({path: node.id});\r\n    this.reachServer('download', this.tree.config.api.downloadFile + parameters);\r\n  }\r\n\r\n  public initDelete(node: NodeInterface): void {\r\n    this.sideEffectHelper(\r\n      'Delete',\r\n      {path: node.id},\r\n      'delete',\r\n      this.tree.config.api.deleteFile,\r\n      () => this.successWithModalClose()\r\n    );\r\n  }\r\n\r\n  public searchForString(input: string): void {\r\n    this.sideEffectHelper(\r\n      'Search',\r\n      {query: input},\r\n      'get',\r\n      this.tree.config.api.searchFiles,\r\n      (res) => this.searchSuccess(input, res)\r\n    );\r\n  }\r\n\r\n  public createFolder(currentParent: number, newDirName: string) {\r\n    this.sideEffectHelper(\r\n      'Create Folder',\r\n      {dirName: newDirName, parentPath: currentParent === 0 ? null : currentParent},\r\n      'post',\r\n      this.tree.config.api.createFolder\r\n    );\r\n  }\r\n\r\n  public rename(id: number, newName: string) {\r\n    this.sideEffectHelper(\r\n      'Rename',\r\n      {path: id, newName: newName},\r\n      'post',\r\n      this.tree.config.api.renameFile,\r\n      () => this.successWithModalClose()\r\n    );\r\n  }\r\n\r\n  private sideEffectHelper(name: string, parameters: {}, httpMethod: string, apiURL: string,\r\n                           successMethod = (a) => this.actionSuccess(a),\r\n                           failMethod = (a, b) => this.actionFailed(a, b)\r\n  ) {\r\n    const params = this.parseParams(parameters);\r\n\r\n    this.ngxSmartModalService.getModal('waitModal').open();\r\n\r\n    this.reachServer(httpMethod, apiURL + params)\r\n      .subscribe(\r\n        (a) => successMethod(a),\r\n        (err) => failMethod(name, err)\r\n      );\r\n  }\r\n\r\n  private reachServer(method: string, apiUrl: string, data: any = {}): Observable<Object> {\r\n    switch (method.toLowerCase()) {\r\n      case 'get':\r\n        return this.http.get(this.tree.config.baseURL + apiUrl);\r\n      case 'post':\r\n        return this.http.post(this.tree.config.baseURL + apiUrl, data);\r\n      case 'delete':\r\n        return this.http.delete(this.tree.config.baseURL + apiUrl);\r\n      case 'download':\r\n        window.open(this.tree.config.baseURL + apiUrl, '_blank');\r\n        return null;\r\n      default:\r\n        console.warn('[NodeClickedService] Incorrect params for this side-effect');\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private parseParams(params: {}): string {\r\n    let query = '?';\r\n\r\n    Object.keys(params).filter(item => params[item] !== null).map(key => {\r\n      query += key + '=' + params[key] + '&';\r\n    });\r\n\r\n    return query.slice(0, -1);\r\n  }\r\n\r\n  private successWithModalClose() {\r\n    this.actionSuccess();\r\n    document.getElementById('side-view').classList.remove('selected');\r\n  }\r\n\r\n  private searchSuccess(input: string, data: any) {\r\n    const obj = {\r\n      searchString: input,\r\n      response: data\r\n    };\r\n\r\n    this.actionSuccess();\r\n\r\n    this.ngxSmartModalService.setModalData(obj, 'searchModal', true);\r\n    this.ngxSmartModalService.getModal('searchModal').open();\r\n  }\r\n\r\n  private actionSuccess(response: string = '') {\r\n    document.body.classList.remove('dialog-open');\r\n\r\n    this.nodeService.refreshCurrentPath();\r\n    this.ngxSmartModalService.getModal('waitModal').close();\r\n  }\r\n\r\n  private actionFailed(name: string, error: any) {\r\n    document.body.classList.remove('dialog-open');\r\n\r\n    this.ngxSmartModalService.getModal('waitModal').close();\r\n    this.ngxSmartModalService.getModal('errorModal').open();\r\n    console.warn('[NodeClickedService] Action \"' + name + '\" failed', error);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {TreeModel} from './models/tree.model';\r\nimport {NodeService} from './services/node.service';\r\nimport {NodeInterface} from './interfaces/node.interface';\r\nimport {SET_LOADING_STATE} from './reducers/actions.action';\r\nimport * as ACTIONS from './reducers/actions.action';\r\nimport {AppStore} from './reducers/reducer.factory';\r\nimport {NgxSmartModalService} from 'ngx-smart-modal';\r\nimport {NodeClickedService} from './services/node-clicked.service';\r\n\r\n@Component({\r\n  selector: 'fm-file-manager',\r\n  template: `<ng-container *ngIf=\"isPopup; then itIsPopup else showContent\"></ng-container>\r\n\r\n<ng-template #itIsPopup>\r\n  <div *ngIf=\"!fmOpen\">\r\n    <button class=\"button big\" (click)=\"fmShowHide()\" translate=\"\">Open file manager</button>\r\n  </div>\r\n  <div class=\"file-manager-backdrop\" *ngIf=\"fmOpen\">\r\n    <div class=\"fmModalInside\">\r\n      <div *ngIf=\"fmOpen; then showContent\"></div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #showContent>\r\n  <div class=\"content\">\r\n    <div class=\"file-manager-navbar\">\r\n      <div class=\"path\">\r\n        <app-nav-bar></app-nav-bar>\r\n      </div>\r\n\r\n      <div class=\"navigation\">\r\n        <app-navigation>\r\n          <div class=\"button close\" (click)=\"fmShowHide()\" *ngIf=\"isPopup\">\r\n            <i class=\"fas fa-2x fa-times\"></i>\r\n          </div>\r\n        </app-navigation>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"holder\">\r\n      <div class=\"file-manager-left\">\r\n        <app-tree [treeModel]=\"tree\">\r\n          <ng-template let-nodes>\r\n            <ng-container [ngTemplateOutletContext]=\"{$implicit: nodes}\"\r\n                          [ngTemplateOutlet]=\"iconTemplate ? iconTemplate : defaultIconTemplate\">\r\n            </ng-container>\r\n          </ng-template>\r\n        </app-tree>\r\n      </div>\r\n\r\n      <div class=\"right\">\r\n        <app-folder-content\r\n          [treeModel]=\"tree\"\r\n          (openUploadDialog)=\"handleUploadDialog($event)\"\r\n          [folderContentTemplate]=\"folderContentTemplate ? folderContentTemplate : defaultFolderContentTemplate\"\r\n          [folderContentNewTemplate]=\"folderContentNewTemplate ? folderContentNewTemplate : defaultFolderContentNewTemplate\"\r\n          [folderContentBackTemplate]=\"folderContentBackTemplate ? folderContentBackTemplate : defaultFolderContentBackTemplate\">\r\n        </app-folder-content>\r\n      </div>\r\n\r\n      <app-side-view id=\"side-view\"\r\n                     [node]=\"selectedNode\"\r\n                     [sideViewTemplate]=\"sideViewTemplate ? sideViewTemplate : defaultSideViewTemplate\"\r\n                     [allowFolderDownload]=\"tree.config.options.allowFolderDownload\"\r\n                     (clickEvent)=\"handleFileManagerClickEvent($event)\">\r\n      </app-side-view>\r\n    </div>\r\n  </div>\r\n\r\n  <app-upload *ngIf=\"newDialog\"\r\n              [openDialog]=\"newDialog\"\r\n              (closeDialog)=\"handleUploadDialog(false)\"\r\n              (createDir)=\"handleFileManagerClickEvent({type: 'createFolder', payload: $event})\">\r\n  </app-upload>\r\n\r\n  <app-loading-overlay\r\n    *ngIf=\"loading\"\r\n    [loadingOverlayTemplate]=\"loadingOverlayTemplate ? loadingOverlayTemplate : defaultLoadingOverlayTemplate\">\r\n  </app-loading-overlay>\r\n</ng-template>\r\n\r\n<ng-template let-node #defaultIconTemplate>\r\n  <div class=\"file-manager-node\" style=\"display: inline-block; padding: 3px\">\r\n    <div *ngIf=\"node.isFolder; then itIsFolder else showFile\"></div>\r\n\r\n    <ng-template #itIsFolder>\r\n      <div *ngIf=\"node.isExpanded; then isFolderExpanded else isFolderClosed\"></div>\r\n    </ng-template>\r\n\r\n    <ng-template #showFile><i class=\"fas fa-file child\"></i></ng-template>\r\n    <ng-template #isFolderExpanded><i class=\"fas fa-folder-open child\"></i></ng-template>\r\n    <ng-template #isFolderClosed><i class=\"fas fa-folder child\"></i></ng-template>\r\n\r\n    <span>{{node.name}}</span>\r\n  </div>\r\n</ng-template>\r\n<ng-template let-node #defaultFolderContentTemplate>\r\n  <div class=\"file-manager-item\">\r\n    <div class=\"file-preview\">\r\n      <div *ngIf=\"node.isFolder; then itIsFolder else showFile\"></div>\r\n      <ng-template #itIsFolder><i class=\"fas fa-3x fa-folder child\"></i></ng-template>\r\n      <ng-template #showFile><i class=\"fas fa-3x fa-file child\"></i></ng-template>\r\n    </div>\r\n    <div class=\"file-name\">\r\n      {{node.name}}\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #defaultFolderContentNewTemplate>\r\n  <div class=\"file-manager-item\">\r\n    <div class=\"file-preview\" style=\"width: 100%; height:100%\">\r\n      <i class=\"fas fa-3x fa-plus child\" style=\"line-height: 2\"></i>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template let-node #defaultFolderContentBackTemplate>\r\n  <div class=\"file-manager-item\">\r\n    <div class=\"file-preview\" style=\"width: 100%; height:100%\">\r\n      <i class=\"fas fa-2x fa-ellipsis-h\" style=\"line-height: 5\"></i>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template let-timeoutMessage #defaultLoadingOverlayTemplate>\r\n  <div class=\"file-manager-backdrop loading\" (click)=\"backdropClicked()\">\r\n    <div class=\"file-manager-error\" *ngIf=\"timeoutMessage\">{{timeoutMessage}}</div>\r\n  </div>\r\n  <div class=\"spinner\">\r\n    <i class=\"fas fa-5x fa-spin fa-sync-alt\"></i>\r\n  </div>\r\n</ng-template>\r\n<ng-template let-node #defaultSideViewTemplate>\r\n  <div style=\"position: absolute; bottom: 0; width: 100%; margin: 5px auto\">\r\n    <span *ngIf=\"node.isFolder\" translate>No data available for this folder</span>\r\n    <span *ngIf=\"!node.isFolder\" translate>No data available for this file</span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ngx-smart-modal identifier=\"renameModal\" [dismissable]=\"false\" [closable]=\"false\" *ngIf=\"selectedNode\" #renameModal>\r\n  <h2 class=\"modal-title\" translate>\r\n    Rename file\r\n  </h2>\r\n  <p class=\"rename-name\" translate>\r\n    Old name\r\n  </p>\r\n  <span style=\"margin: 8px\">{{selectedNode.name}}</span>\r\n  <p class=\"rename-name\" translate>\r\n    New name\r\n  </p>\r\n  <input placeholder=\"New name\" type=\"text\" class=\"rename-input\" [value]=\"selectedNode.name\" #renameInput\r\n         (keyup.enter)=\"handleFileManagerClickEvent({type: 'rename', value: renameInput.value})\"\r\n         onclick=\"this.select();\">\r\n  <br>\r\n\r\n  <div class=\"rename-button\">\r\n    <button class=\"button big\" translate\r\n            (click)=\"handleFileManagerClickEvent({type: 'rename', value: renameInput.value})\"\r\n            [disabled]=\"renameInput.value === selectedNode.name || renameInput.value.length === 0\">\r\n      Rename\r\n    </button>\r\n    <button class=\"button big\" (click)=\"renameModal.close()\" translate>\r\n      Cancel\r\n    </button>\r\n  </div>\r\n\r\n</ngx-smart-modal>\r\n<ngx-smart-modal *ngIf=\"selectedNode\" identifier=\"confirmDeleteModal\" #deleteModal\r\n                 [dismissable]=\"false\" [closable]=\"false\">\r\n  <h2 class=\"modal-title\">\r\n    <span translate>You are trying to delete following </span>\r\n    <span *ngIf=\"selectedNode.isFolder\" translate>folder</span>\r\n    <span *ngIf=\"!selectedNode.isFolder\" translate>file</span>\r\n  </h2>\r\n\r\n  <div style=\"width: 100%; margin: 5px auto; text-align: center\">{{selectedNode.name}}</div>\r\n\r\n  <div class=\"rename-button\">\r\n    <button class=\"button big\" (click)=\"handleFileManagerClickEvent({type: 'remove'})\">\r\n      <span translate>Yes, delete this </span>\r\n      <span *ngIf=\"selectedNode.isFolder\" translate>folder</span>\r\n      <span *ngIf=\"!selectedNode.isFolder\" translate>file</span>\r\n    </button>\r\n    <button class=\"button big\" (click)=\"deleteModal.close()\" translate>\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</ngx-smart-modal>\r\n<ngx-smart-modal identifier=\"searchModal\" #searchModal [closable]=\"true\">\r\n  <h2 class=\"modal-title\" style=\"margin-bottom: 2px\" translate\r\n      *ngIf=\"searchModal.hasData() && searchModal.getData().response.length !== 0\">\r\n    Search results for\r\n  </h2>\r\n  <h2 class=\"modal-title\" style=\"margin-bottom: 2px\" translate\r\n      *ngIf=\"!searchModal.hasData() || searchModal.getData().response.length === 0\">\r\n    No results found for\r\n  </h2>\r\n  <div style=\"text-align: center\" *ngIf=\"searchModal.hasData()\">{{searchModal.getData().searchString}}</div>\r\n\r\n  <div *ngIf=\"searchModal.hasData() && searchModal.getData().response.length !== 0\">\r\n    <table style=\"margin: 0 auto\">\r\n      <tr>\r\n        <td class=\"table-item table-head\" translate>File name</td>\r\n        <td class=\"table-item-short table-head\" translate>Size</td>\r\n      </tr>\r\n      <tr *ngFor=\"let item of searchModal.getData().response\" (click)=\"searchClicked(item)\">\r\n        <td style=\"cursor: pointer\">\r\n          <ng-container *ngIf=\"item.fileCategory === 'D'; else file\">\r\n            <i class=\"fas fa-folder search-output-icon\"></i>\r\n          </ng-container>\r\n          <ng-template #file>\r\n            <i class=\"fas fa-file search-output-icon\"></i>\r\n          </ng-template>\r\n          <span style=\"text-overflow: ellipsis\">{{item.name}}</span>\r\n        </td>\r\n        <td class=\"table-item-short\">{{item.size}}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</ngx-smart-modal>\r\n<ngx-smart-modal identifier=\"waitModal\" [closable]=\"false\" [dismissable]=\"false\" [escapable]=\"false\">\r\n  <h2 class=\"modal-title\" style=\"margin-top: 20px\">\r\n    {{'Processing request'}}...\r\n  </h2>\r\n\r\n  <div style=\"text-align: center; height: 70px\">\r\n    <i class=\"fas fa-spinner fa-spin fa-4x\"></i>\r\n  </div>\r\n</ngx-smart-modal>\r\n<ngx-smart-modal identifier=\"errorModal\" [closable]=\"true\">\r\n  <h2 class=\"modal-title\" style=\"margin-top: 20px\">\r\n    {{'Something went wrong with your request'}}...\r\n  </h2>\r\n</ngx-smart-modal>\r\n`,\r\n  styles: [`.content{height:100%;min-width:850px}.holder{display:-webkit-flex;display:flex;height:calc(100% - 75px)}.path{margin:auto 0;display:block}.navigation{margin:auto 0;display:-webkit-flex;display:flex}.navigation .button{margin:0 10px;padding:0;position:relative}.right{width:100%;position:relative;overflow:auto}.file-name{width:100px;height:25px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.file-preview{margin:auto}.file-preview i{line-height:1.5}.spinner{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);cursor:progress}.rename-button{margin:20px auto;display:block;text-align:center}.modal-title{margin-top:5px;text-align:center}.search-output{margin:15px 0}.search-output-icon{margin:2px 5px}.table-item{width:80%}.table-item-short{width:20%;text-align:right}`],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FileManagerComponent implements OnInit {\r\n  @Input() iconTemplate: TemplateRef<any>;\r\n  @Input() folderContentTemplate: TemplateRef<any>;\r\n  @Input() folderContentBackTemplate: TemplateRef<any>;\r\n  @Input() folderContentNewTemplate: TemplateRef<any>;\r\n  @Input() loadingOverlayTemplate: TemplateRef<any>;\r\n  @Input() sideViewTemplate: TemplateRef<any>;\r\n\r\n  @Input() tree: TreeModel;\r\n  @Input() isPopup: boolean = false;\r\n  @Output() itemClicked = new EventEmitter();\r\n\r\n  selectedNode: NodeInterface;\r\n  sideMenuClosed = true;\r\n\r\n  fmOpen = false;\r\n  loading: boolean;\r\n  newDialog = false;\r\n\r\n  constructor(\r\n    private store: Store<AppStore>,\r\n    private nodeService: NodeService,\r\n    private nodeClickedService: NodeClickedService,\r\n    public ngxSmartModalService: NgxSmartModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // @ts-ignore\r\n    window.console = window.console || {};\r\n    window.console.log = window.console.log || function () {\r\n    };\r\n\r\n    this.nodeService.tree = this.tree;\r\n    this.nodeClickedService.tree = this.tree;\r\n    this.nodeService.startManagerAt(this.tree.currentPath);\r\n\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.isLoading))\r\n      .subscribe((data: boolean) => {\r\n        this.loading = data;\r\n      });\r\n\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.selectedNode))\r\n      .subscribe((node: NodeInterface) => {\r\n        if (!node) {\r\n          return;\r\n        }\r\n\r\n        // fixed highlighting error when closing node but not changing path\r\n        if ((node.isExpanded && node.pathToNode !== this.nodeService.currentPath) && !node.stayOpen) {\r\n          return;\r\n        }\r\n\r\n        this.handleFileManagerClickEvent({type: 'select', node: node});\r\n      });\r\n  }\r\n\r\n  onItemClicked(event: any): void {\r\n    this.itemClicked.emit(event);\r\n  }\r\n\r\n  searchClicked(data: any) {\r\n    // console.log(data);\r\n\r\n    const node = this.nodeService.findNodeById(data.id);\r\n    this.ngxSmartModalService.getModal('searchModal').close();\r\n    this.store.dispatch({type: ACTIONS.SET_SELECTED_NODE, payload: node});\r\n  }\r\n\r\n  handleFileManagerClickEvent(event: any) {\r\n    switch (event.type) {\r\n      case 'closeSideView' :\r\n        return this.nodeClickHandler(event.node, true);\r\n\r\n      case 'select' :\r\n        this.onItemClicked(event);\r\n        this.highlightSelected(event.node);\r\n        return this.nodeClickHandler(event.node);\r\n\r\n      case 'download' :\r\n        this.nodeClickedService.startDownload(event.node);\r\n        return this.onItemClicked(event);\r\n\r\n      case 'renameConfirm' :\r\n        return this.ngxSmartModalService.getModal('renameModal').open();\r\n      case 'rename' :\r\n        this.ngxSmartModalService.getModal('renameModal').close();\r\n\r\n        this.nodeClickedService.rename(this.selectedNode.id, event.value);\r\n        return this.onItemClicked({\r\n          type: event.type,\r\n          node: this.selectedNode,\r\n          newName: event.value\r\n        });\r\n\r\n      case 'removeAsk':\r\n        return this.ngxSmartModalService.getModal('confirmDeleteModal').open();\r\n      case 'remove':\r\n        this.ngxSmartModalService.getModal('confirmDeleteModal').close();\r\n\r\n        this.nodeClickedService.initDelete(this.selectedNode);\r\n        return this.onItemClicked({\r\n          type: event.type,\r\n          node: this.selectedNode\r\n        });\r\n\r\n      case 'createFolder' :\r\n        const parentId = this.nodeService.findNodeByPath(this.nodeService.currentPath).id;\r\n\r\n        this.nodeClickedService.createFolder(parentId, event.payload);\r\n        return this.onItemClicked({\r\n          type: event.type,\r\n          parentId: parentId,\r\n          newDirName: event.payload\r\n        });\r\n    }\r\n  }\r\n\r\n  nodeClickHandler(node: NodeInterface, closing?: boolean) {\r\n    if (node.name === 'root') {\r\n      return;\r\n    }\r\n\r\n    if (closing) {\r\n      const parentNode = this.nodeService.findNodeByPath(this.nodeService.currentPath);\r\n      this.store.dispatch({type: ACTIONS.SET_SELECTED_NODE, payload: parentNode});\r\n      this.sideMenuClosed = true;\r\n    }\r\n    else {\r\n      if (this.selectedNode === node && this.sideMenuClosed)\r\n        this.sideMenuClosed = false;\r\n      else if (this.selectedNode === node && !this.sideMenuClosed)\r\n        this.sideMenuClosed = true;\r\n      else if (this.selectedNode !== node && this.sideMenuClosed)\r\n        this.sideMenuClosed = false;\r\n      else if (this.selectedNode !== node && !this.sideMenuClosed)\r\n        this.sideMenuClosed = false;\r\n    }\r\n\r\n    this.selectedNode = node;\r\n\r\n    // todo investigate this workaround - warning: [File Manager] failed to find requested node for path: [path]\r\n    if(!document.getElementById('side-view')) {\r\n      return;\r\n    }\r\n\r\n    if (this.sideMenuClosed) {\r\n      document.getElementById('side-view').classList.remove('selected');\r\n    } else {\r\n      document.getElementById('side-view').classList.add('selected');\r\n    }\r\n  }\r\n\r\n  // todo stay DRY!\r\n  highlightSelected(node: NodeInterface) {\r\n    let pathToNode = node.pathToNode;\r\n\r\n    if (pathToNode.length === 0) {\r\n      pathToNode = 'root';\r\n    }\r\n\r\n    const treeElement = this.getElementById(pathToNode, 'tree_');\r\n    const fcElement = this.getElementById(pathToNode, 'fc_');\r\n    if (!treeElement && !fcElement) {\r\n      console.warn('[File Manager] failed to find requested node for path:', pathToNode);\r\n      return;\r\n    }\r\n\r\n    this.removeClass('highlighted');\r\n    this.removeClass('light');\r\n\r\n    if (fcElement)\r\n      this.highilghtChildElement(fcElement);\r\n    if (treeElement)\r\n      this.highilghtChildElement(treeElement, true);\r\n\r\n    // parent node highlight\r\n    let pathToParent = node.pathToParent;\r\n    if (pathToParent === null || node.pathToNode === this.nodeService.currentPath) {\r\n      return;\r\n    }\r\n\r\n    if (pathToParent.length === 0) {\r\n      pathToParent = 'root';\r\n    }\r\n\r\n    const parentElement = this.getElementById(pathToParent, 'tree_');\r\n    if (!parentElement) {\r\n      console.warn('[File Manager] failed to find requested parent node for path:', pathToParent);\r\n      return;\r\n    }\r\n\r\n    this.highilghtChildElement(parentElement);\r\n  }\r\n\r\n  private highilghtChildElement(el: HTMLElement, light: boolean = false) {\r\n    el.children[0] // appnode div wrapper\r\n      .children[0] // ng template first item\r\n      .classList.add('highlighted');\r\n\r\n    if (light)\r\n      el.children[0]\r\n        .children[0]\r\n        .classList.add('light');\r\n  }\r\n\r\n  private getElementById(id: string, prefix: string = ''): HTMLElement {\r\n    const fullId = prefix + id;\r\n    return document.getElementById(fullId);\r\n  }\r\n\r\n  private removeClass(className: string) {\r\n    Array.from(document.getElementsByClassName(className))\r\n      .map((el: HTMLElement) => el.classList.remove(className));\r\n  }\r\n\r\n  fmShowHide() {\r\n    this.fmOpen = !this.fmOpen;\r\n  }\r\n\r\n  backdropClicked() {\r\n    // todo get rid of this ugly workaround\r\n    // todo fire userCanceledLoading event\r\n    this.store.dispatch({type: SET_LOADING_STATE, payload: false});\r\n  }\r\n\r\n  handleUploadDialog(event: any) {\r\n    this.newDialog = event;\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {TreeModel} from '../../models/tree.model';\r\nimport {NodeService} from '../../services/node.service';\r\nimport {NodeInterface} from '../../interfaces/node.interface';\r\nimport {AppStore} from '../../reducers/reducer.factory';\r\n\r\n@Component({\r\n  selector: 'app-folder-content',\r\n  template: `<div class=\"item-holder\" *ngIf=\"nodes\">\r\n  <ng-container *ngIf=\"nodes.id !== 0\">\r\n    <app-node [node]=nodes id=\"{{nodes.pathToNode}}\">\r\n      <ng-container [ngTemplateOutletContext]=\"{$implicit: nodes}\"\r\n                    [ngTemplateOutlet]=\"folderContentBackTemplate\">\r\n      </ng-container>\r\n    </app-node>\r\n  </ng-container>\r\n\r\n  <ng-container *ngFor=\"let node of obj.keys(nodes.children)\">\r\n    <app-node [node]=\"nodes.children[node]\"\r\n              id=\"fc_{{nodes.children[node].pathToNode}}\">\r\n      <ng-container [ngTemplateOutletContext]=\"{$implicit: nodes.children[node]}\"\r\n                    [ngTemplateOutlet]=\"folderContentTemplate\">\r\n      </ng-container>\r\n    </app-node>\r\n  </ng-container>\r\n\r\n  <div class=\"new\" (click)=\"newClickedAction()\">\r\n    <ng-container [ngTemplateOutlet]=\"folderContentNewTemplate\"></ng-container>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.item-holder{box-sizing:border-box;display:-webkit-flex;display:flex;-webkit-flex-flow:wrap;flex-flow:wrap}.item-holder .new{display:inline}`]\r\n})\r\nexport class FolderContentComponent implements OnInit {\r\n  @Input() folderContentTemplate: TemplateRef<any>;\r\n  @Input() folderContentBackTemplate: TemplateRef<any>;\r\n  @Input() folderContentNewTemplate: TemplateRef<any>;\r\n\r\n  @Input() treeModel: TreeModel;\r\n\r\n  @Output() openUploadDialog = new EventEmitter();\r\n\r\n  nodes: NodeInterface;\r\n  obj = Object;\r\n\r\n  constructor(\r\n    private nodeService: NodeService,\r\n    private store: Store<AppStore>\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.path))\r\n      .subscribe((path: string) => {\r\n        this.nodes = this.nodeService.findNodeByPath(path);\r\n      });\r\n  }\r\n\r\n  newClickedAction() {\r\n    this.openUploadDialog.emit(true);\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ContentChild, Input, OnInit, TemplateRef} from '@angular/core';\r\nimport {NodeInterface} from '../../interfaces/node.interface';\r\nimport {TreeModel} from '../../models/tree.model';\r\nimport {NodeService} from '../../services/node.service';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {AppStore} from '../../reducers/reducer.factory';\r\nimport * as ACTIONS from '../../reducers/actions.action';\r\nimport {first} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-tree',\r\n  template: `<app-node-lister [showFiles]=\"treeModel.config.options.showFilesInsideTree\"\r\n                 [nodes]=\"{children: nodes}\">\r\n  <ng-template let-nodes>\r\n    <ng-container [ngTemplateOutletContext]=\"{$implicit: nodes}\" [ngTemplateOutlet]=\"templateRef\"></ng-container>\r\n  </ng-template>\r\n</app-node-lister>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class TreeComponent implements AfterViewInit, OnInit {\r\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  @Input() treeModel: TreeModel;\r\n\r\n  nodes: NodeInterface;\r\n  currentTreeLevel = '';\r\n\r\n  constructor(\r\n    private nodeService: NodeService,\r\n    private store: Store<AppStore>\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nodes = this.treeModel.nodes;\r\n\r\n    //todo move this store to proper place\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.path))\r\n      .subscribe((path: string) => {\r\n        this.nodeService.getNodes(path);\r\n\r\n        this.currentTreeLevel = this.treeModel.currentPath;\r\n\r\n        return this.treeModel.currentPath = path;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.path))\r\n      .pipe(first())\r\n      .subscribe((path: string) => {\r\n        const nodes = this.nodeService.findNodeByPath(path);\r\n        this.store.dispatch({type: ACTIONS.SET_SELECTED_NODE, payload: nodes});\r\n      });\r\n  }\r\n}\r\n","import {Component, ContentChild, Input, OnInit, TemplateRef} from '@angular/core';\r\nimport {NodeInterface} from '../../../interfaces/node.interface';\r\n\r\n@Component({\r\n  selector: 'app-node-lister',\r\n  template: `<ul class=\"node-lister-flist\">\r\n  <!--In order to avoid having to create that extra div, we can instead use ng-container directive-->\r\n  <ng-container *ngFor=\"let node of obj.keys(nodes)\">\r\n    <li class=\"node-lister-list-item\" *ngIf=\"nodes[node].isFolder || showFiles\">\r\n\r\n      <app-node class=\"node-lister-app-node\" [node]=\"nodes[node]\" id=\"tree_{{nodes[node].id === 0 ? 'root' : nodes[node].pathToNode}}\">\r\n        <ng-container [ngTemplateOutletContext]=\"{$implicit: (nodes[node])}\"\r\n                      [ngTemplateOutlet]=\"templateRef\">\r\n        </ng-container>\r\n      </app-node>\r\n\r\n      <app-node-lister class=\"node-lister\" *ngIf=\"obj.keys(nodes[node].children).length > 0\"\r\n                       [showFiles]=\"showFiles\" [nodes]=\"nodes[node].children\">\r\n        <ng-template let-nodes>\r\n          <ng-container [ngTemplateOutletContext]=\"{$implicit: (nodes)}\"\r\n                        [ngTemplateOutlet]=\"templateRef\">\r\n          </ng-container>\r\n        </ng-template>\r\n      </app-node-lister>\r\n    </li>\r\n  </ng-container>\r\n</ul>\r\n`,\r\n  styles: [`.node-lister-flist{margin:0 0 0 1em;padding:0;list-style:none;white-space:nowrap}.node-lister-list-item{list-style:none;line-height:1.2em;font-size:1em;display:inline}.node-lister-list-item .node-lister-app-node.deselected+.node-lister ul{display:none}`]\r\n})\r\nexport class NodeListerComponent implements OnInit {\r\n  @ContentChild(TemplateRef) templateRef: TemplateRef<any>;\r\n  @Input() nodes: NodeInterface;\r\n  @Input() showFiles: boolean;\r\n\r\n  obj = Object;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NodeInterface} from '../../../interfaces/node.interface';\r\nimport {Store} from '@ngrx/store';\r\n\r\nimport * as ACTIONS from '../../../reducers/actions.action';\r\nimport {AppStore} from '../../../reducers/reducer.factory';\r\nimport {NodeService} from '../../../services/node.service';\r\nimport {NodeClickedService} from '../../../services/node-clicked.service';\r\n\r\n@Component({\r\n  selector: 'app-node',\r\n  template: `<div #customTemplate (dblclick)=\"method2CallForDblClick($event)\" (click)=\"method1CallForClick($event)\">\r\n  <ng-content></ng-content>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class NodeComponent implements OnInit {\r\n  @Input() node: NodeInterface;\r\n  isSingleClick = true;\r\n\r\n  constructor(\r\n    private store: Store<AppStore>,\r\n    private nodeService: NodeService,\r\n    private nodeClickedService: NodeClickedService\r\n  ) {\r\n  }\r\n\r\n  public method1CallForClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n\r\n    this.isSingleClick = true;\r\n    setTimeout(() => {\r\n      if (this.isSingleClick) {\r\n        this.showMenu();\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n  // todo event.preventDefault for double click\r\n  public method2CallForDblClick(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.isSingleClick = false;\r\n    this.open();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private open() {\r\n    if (!this.node.isFolder) {\r\n      this.nodeClickedService.startDownload(this.node);\r\n      return;\r\n    }\r\n\r\n    if (this.node.stayOpen) {\r\n      if (this.node.name == 'root') {\r\n        this.nodeService.foldAll();\r\n      }\r\n\r\n      this.store.dispatch({type: ACTIONS.SET_PATH, payload: this.node.pathToNode});\r\n      return;\r\n    }\r\n\r\n    this.toggleNodeExpanded();\r\n\r\n    if (this.node.isExpanded) {\r\n      this.store.dispatch({type: ACTIONS.SET_PATH, payload: this.node.pathToNode});\r\n    }\r\n\r\n    this.setNodeSelectedState();\r\n  }\r\n\r\n  private showMenu() {\r\n    this.store.dispatch({type: ACTIONS.SET_SELECTED_NODE, payload: this.node});\r\n  }\r\n\r\n  private toggleNodeExpanded() {\r\n    this.node.isExpanded = !this.node.isExpanded;\r\n  }\r\n\r\n  private setNodeSelectedState() {\r\n    if (!this.node.isExpanded) {\r\n      document.getElementById('tree_' + this.node.pathToNode).classList.add('deselected');\r\n\r\n      this.nodeService.foldRecursively(this.node);\r\n\r\n      this.store.dispatch({type: ACTIONS.SET_PATH, payload: this.node.pathToParent});\r\n    } else {\r\n      document.getElementById('tree_' + this.node.pathToNode).classList.remove('deselected');\r\n    }\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'mapToIterablePipe'\r\n})\r\nexport class MapToIterablePipe implements PipeTransform {\r\n  transform(dict: Object) {\r\n    const a = [];\r\n    for (const key in dict) {\r\n      if (dict.hasOwnProperty(key)) {\r\n        a.push({key: key, val: dict[key]});\r\n      }\r\n    }\r\n\r\n    return a;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {select, Store} from '@ngrx/store';\r\nimport * as ACTIONS from '../../reducers/actions.action';\r\nimport {AppStore} from '../../reducers/reducer.factory';\r\nimport {NodeService} from '../../services/node.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  template: `<div>\r\n  >> <span *ngFor=\"let to of currentPath; let i = index\">\r\n  <a class=\"link\" (click)=\"onClick(currentPath, i)\">\r\n    <div *ngIf=\"to === '' || to === 'root'; then icon else name\"></div>\r\n    <ng-template #icon><i class=\"fas fa-home\"></i></ng-template>\r\n    <ng-template #name>{{to}}</ng-template>\r\n  </a> /\r\n  </span>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  currentPath: string[];\r\n\r\n  constructor(\r\n    private store: Store<AppStore>,\r\n    private nodeService: NodeService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .pipe(select(state => state.fileManagerState.path))\r\n      .subscribe((data: string) => {\r\n        this.nodeService.currentPath = data;\r\n        this.currentPath = data.split('/');\r\n      });\r\n  }\r\n\r\n  onClick(path: string[], index: number) {\r\n    const newPath = path.slice(0, index + 1).join('/');\r\n    this.store.dispatch({type: ACTIONS.SET_PATH, payload: newPath});\r\n  }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {StateInterface} from '../interfaces/state.interface';\r\nimport * as ACTIONS from './actions.action';\r\n\r\nconst initialState: StateInterface = {\r\n  path: '',\r\n  isLoading: true,\r\n  selectedNode: null\r\n};\r\n\r\nexport function stateReducer(state: StateInterface = initialState, action: ACTIONS.Actions): StateInterface {\r\n  // console.log('Previous state: ', state);\r\n  // console.log('ACTION type: ', action.type);\r\n  // console.log('ACTION payload: ', action.payload);\r\n\r\n  switch (action.type) {\r\n    case ACTIONS.SET_PATH :\r\n      if (state.path === action.payload) {\r\n        return state;\r\n      }\r\n      return {...state, path: action.payload, isLoading: true};\r\n    case ACTIONS.SET_LOADING_STATE :\r\n      return {...state, isLoading: action.payload};\r\n    case ACTIONS.SET_SELECTED_NODE :\r\n      return {...state, selectedNode: action.payload};\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n","import {stateReducer} from './stateReducer';\r\nimport {ActionReducerMap} from '@ngrx/store';\r\nimport {StateInterface} from '../interfaces/state.interface';\r\n\r\nexport interface AppStore {\r\n  fileManagerState: StateInterface;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppStore> = {\r\n  fileManagerState: stateReducer\r\n};\r\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\r\nimport {_} from '@biesbjerg/ngx-translate-extract/dist/utils/utils';\r\nimport {timer} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-loading-overlay',\r\n  template: `<ng-container\r\n  [ngTemplateOutletContext]=\"{$implicit: timeoutMessage}\"\r\n  [ngTemplateOutlet]=\"loadingOverlayTemplate\">\r\n</ng-container>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class LoadingOverlayComponent implements OnInit {\r\n  @Input() loadingOverlayTemplate: TemplateRef<any>;\r\n  timeoutMessage: any;\r\n\r\n  // todo unsubscribe from 'list' event - now we are only dismissing this component\r\n  ngOnInit() {\r\n    timer(2000).subscribe(() => {\r\n      this.timeoutMessage = _('Troubles with loading? Click anywhere to cancel loading');\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/*\r\n * Convert bytes into largest possible unit.\r\n * Takes an precision argument that defaults to 2.\r\n * Usage:\r\n *   bytes | fileSize:precision\r\n * Example:\r\n *   {{ 1024 |  fileSize}}\r\n *   formats to: 1 KB\r\n*/\r\n@Pipe({name: 'fileSize'})\r\nexport class FileSizePipe implements PipeTransform {\r\n\r\n  private units = [\r\n    'bytes',\r\n    'KB',\r\n    'MB',\r\n    'GB',\r\n    'TB',\r\n    'PB'\r\n  ];\r\n\r\n  transform(bytes: number = 0, precision: number = 2 ) : string {\r\n    if ( isNaN( parseFloat( String(bytes) )) || ! isFinite( bytes ) ) return '?';\r\n\r\n    let unit = 0;\r\n\r\n    while ( bytes >= 1024 ) {\r\n      bytes /= 1024;\r\n      unit ++;\r\n    }\r\n\r\n    return bytes.toFixed( + precision ) + ' ' + this.units[ unit ];\r\n  }\r\n}\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {FineUploader} from 'fine-uploader';\r\nimport {NodeService} from '../../../services/node.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  template: `<div class=\"backdrop\" (click)=\"newClickedAction()\"></div>\r\n<div class=\"upload-background\">\r\n  <div class=\"buttons\">\r\n    <button class=\"button\" [disabled]=\"newFolder\" (click)=\"createNewFolder()\" translate>Create new folder</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"newFolder\">\r\n    <div class=\"buttons\">\r\n      <app-new-folder (buttonClicked)=\"createNewFolder($event)\"></app-new-folder>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"fine-uploader\">\r\n  </div>\r\n\r\n\r\n  <div class=\"buttons\">\r\n    <button class=\"button big\" [disabled]=\"this.counter < 1\" (click)=\"uploadFiles()\" translate>\r\n      Upload\r\n    </button>\r\n    <button class=\"button big\" (click)=\"newClickedAction()\" translate>\r\n      Close\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div id=\"fine-uploader-template\" style=\"display: none;\">\r\n  <div class=\"qq-uploader-selector qq-uploader\" qq-drop-area-text=\"Drop files here\">\r\n    <div class=\"qq-upload-drop-area-selector qq-upload-drop-area\" qq-hide-dropzone>\r\n      <span class=\"qq-upload-drop-area-text-selector\"></span>\r\n    </div>\r\n\r\n    <div class=\"upload-top-bar\">\r\n      <div class=\"qq-upload-button-selector qq-upload-button\">\r\n        <div translate>Upload a file</div>\r\n      </div>\r\n\r\n      <div class=\"qq-total-progress-bar-container-selector qq-total-progress-bar-container\">\r\n        <div role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n             class=\"qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <span class=\"qq-drop-processing-selector qq-drop-processing\">\r\n            <span translate>Processing dropped files</span>...\r\n            <span class=\"qq-drop-processing-spinner-selector qq-drop-processing-spinner\"></span>\r\n    </span>\r\n\r\n    <ul class=\"qq-upload-list-selector qq-upload-list\" aria-live=\"polite\" aria-relevant=\"additions removals\">\r\n      <li>\r\n        <div class=\"qq-progress-bar-container-selector\">\r\n          <div role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n               class=\"qq-progress-bar-selector qq-progress-bar\"></div>\r\n        </div>\r\n        <span class=\"qq-upload-spinner-selector qq-upload-spinner\"></span>\r\n        <img class=\"qq-thumbnail-selector\" qq-max-size=\"100\" qq-server-scale>\r\n        <span class=\"qq-upload-file-selector qq-upload-file\"></span>\r\n        <span class=\"qq-edit-filename-icon-selector qq-edit-filename-icon\" aria-label=\"Edit filename\"></span>\r\n        <input class=\"qq-edit-filename-selector qq-edit-filename\" tabindex=\"0\" type=\"text\">\r\n        <span class=\"qq-upload-size-selector qq-upload-size\"></span>\r\n        <button type=\"button\" class=\"qq-btn qq-upload-cancel-selector qq-upload-cancel\" translate>Cancel</button>\r\n        <button type=\"button\" class=\"qq-btn qq-upload-retry-selector qq-upload-retry\" translate>Retry</button>\r\n        <button type=\"button\" class=\"qq-btn qq-upload-delete-selector qq-upload-delete\" translate>Delete</button>\r\n        <span role=\"status\" class=\"qq-upload-status-text-selector qq-upload-status-text\"></span>\r\n      </li>\r\n    </ul>\r\n\r\n    <dialog class=\"qq-alert-dialog-selector\">\r\n      <div class=\"qq-dialog-message-selector\"></div>\r\n      <div class=\"qq-dialog-buttons\">\r\n        <button type=\"button\" class=\"qq-cancel-button-selector\" translate>Close</button>\r\n      </div>\r\n    </dialog>\r\n\r\n    <dialog class=\"qq-confirm-dialog-selector\">\r\n      <div class=\"qq-dialog-message-selector\"></div>\r\n      <div class=\"qq-dialog-buttons\">\r\n        <button type=\"button\" class=\"qq-cancel-button-selector\" translate>No</button>\r\n        <button type=\"button\" class=\"qq-ok-button-selector\" translate>Yes</button>\r\n      </div>\r\n    </dialog>\r\n\r\n    <dialog class=\"qq-prompt-dialog-selector\">\r\n      <div class=\"qq-dialog-message-selector\"></div>\r\n      <input type=\"text\">\r\n      <div class=\"qq-dialog-buttons\">\r\n        <button type=\"button\" class=\"qq-cancel-button-selector\" translate>Cancel</button>\r\n        <button type=\"button\" class=\"qq-ok-button-selector\" translate>Ok</button>\r\n      </div>\r\n    </dialog>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.upload-content{text-align:center;max-height:25vh;overflow:auto;margin:10px auto}.fa-times:before{content:\"\\\\f00d\"}.buttons{background:#fff;padding:5px;margin:10px 0}`, `.qq-upload-button div{line-height:25px}.qq-upload-button-focus{outline:0}.qq-uploader{position:relative;min-height:200px;max-height:490px;overflow-y:hidden;width:inherit;border-radius:6px;background-color:#fdfdfd;border:1px dashed #ccc;padding:20px}.qq-uploader:before{content:attr(qq-drop-area-text) \" \";position:absolute;font-size:200%;left:0;width:100%;text-align:center;top:45%;opacity:.25}.qq-upload-drop-area,.qq-upload-extra-drop-area{position:absolute;top:0;left:0;width:100%;height:100%;min-height:30px;z-index:2;background:#f9f9f9;border-radius:4px;border:1px dashed #ccc;text-align:center}.qq-upload-drop-area span{display:block;position:absolute;top:50%;width:100%;margin-top:-8px;font-size:16px}.qq-upload-extra-drop-area{position:relative;margin-top:50px;font-size:16px;padding-top:30px;height:20px;min-height:40px}.qq-upload-drop-area-active{background:#fdfdfd;border-radius:4px;border:1px dashed #ccc}.qq-upload-list{margin:0;padding:0;list-style:none;max-height:450px;overflow-y:auto;clear:both}.qq-upload-list li{margin:0;padding:9px;line-height:15px;font-size:16px;color:#424242;background-color:#f6f6f6;border-top:1px solid #fff;border-bottom:1px solid #ddd}.qq-upload-list li:first-child{border-top:none}.qq-upload-list li:last-child{border-bottom:none}.qq-upload-cancel,.qq-upload-continue,.qq-upload-delete,.qq-upload-failed-text,.qq-upload-file,.qq-upload-pause,.qq-upload-retry,.qq-upload-size,.qq-upload-spinner{margin-right:12px;display:inline}.qq-upload-file{vertical-align:middle;display:inline-block;width:300px;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;height:18px}.qq-upload-spinner{display:inline-block;background:url(loading.gif);width:15px;height:15px;vertical-align:text-bottom}.qq-drop-processing{display:block}.qq-drop-processing-spinner{display:inline-block;background:url(processing.gif);width:24px;height:24px;vertical-align:text-bottom}.qq-upload-cancel,.qq-upload-continue,.qq-upload-delete,.qq-upload-pause,.qq-upload-retry,.qq-upload-size{font-size:12px;font-weight:400;cursor:pointer;vertical-align:middle}.qq-upload-status-text{font-size:14px;font-weight:700;display:block}.qq-upload-failed-text{display:none;font-style:italic;font-weight:700}.qq-upload-failed-icon{display:none;width:15px;height:15px;vertical-align:text-bottom}.qq-upload-fail .qq-upload-failed-text,.qq-upload-retrying .qq-upload-failed-text{display:inline}.qq-upload-list li.qq-upload-success{background-color:#ebf6e0;color:#424242;border-bottom:1px solid #d3ded1;border-top:1px solid #f7fff5}.qq-upload-list li.qq-upload-fail{background-color:#f5d7d7;color:#424242;border-bottom:1px solid #decaca;border-top:1px solid #fce6e6}.qq-total-progress-bar{height:25px;border-radius:9px}INPUT.qq-edit-filename{position:absolute;opacity:0;z-index:-1}.qq-upload-file.qq-editable{cursor:pointer;margin-right:4px}.qq-edit-filename-icon.qq-editable{display:inline-block;cursor:pointer}INPUT.qq-edit-filename.qq-editing{position:static;height:28px;padding:0 8px;margin-right:10px;margin-bottom:-5px;border:1px solid #ccc;border-radius:2px;font-size:16px;opacity:1}.qq-edit-filename-icon{display:none;background:url(edit.gif);width:15px;height:15px;vertical-align:text-bottom;margin-right:16px}.qq-hide{display:none}.qq-thumbnail-selector{vertical-align:middle;margin-right:12px}.qq-uploader DIALOG{display:none}.qq-uploader DIALOG[open]{display:block}.qq-uploader DIALOG .qq-dialog-buttons{text-align:center;padding-top:10px}.qq-uploader DIALOG .qq-dialog-buttons BUTTON{margin-left:5px;margin-right:5px}.qq-uploader DIALOG .qq-dialog-message-selector{padding-bottom:10px}.qq-uploader DIALOG::-webkit-backdrop{background-color:rgba(0,0,0,.7)}.qq-uploader DIALOG::backdrop{background-color:rgba(0,0,0,.7)}`],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UploadComponent implements OnInit, AfterViewInit {\r\n  @Input() openDialog;\r\n\r\n  @Output() closeDialog = new EventEmitter();\r\n  @Output() createDir = new EventEmitter();\r\n\r\n  uploader: FineUploader;\r\n  newFolder = false;\r\n  counter = 0;\r\n\r\n  constructor(private http: HttpClient,\r\n              private nodeService: NodeService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.uploader = new FineUploader({\r\n      debug: false,\r\n      autoUpload: false,\r\n      maxConnections: 1, // todo configurable\r\n      element: document.getElementById('fine-uploader'),\r\n      template: document.getElementById('fine-uploader-template'),\r\n      request: {\r\n        endpoint: this.nodeService.tree.config.baseURL + this.nodeService.tree.config.api.uploadFile,\r\n        // forceMultipart: false,\r\n        paramsInBody: false,\r\n        params: {\r\n          parentPath: this.getCurrentPath\r\n        }\r\n      },\r\n      retry: {\r\n        enableAuto: false\r\n      },\r\n      callbacks: {\r\n        onSubmitted: () => this.counter++,\r\n        onCancel: () => {\r\n          this.counter < 0 ? console.warn('wtf?') : this.counter--;\r\n        },\r\n        onAllComplete: (succ: any, fail: any) => {\r\n          if (succ.length > 0) {\r\n            this.counter = 0;\r\n            this.nodeService.refreshCurrentPath();\r\n          }\r\n        }\r\n      }\r\n    })\r\n    ;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get getCurrentPath() {\r\n    const parentPath = this.nodeService.findNodeByPath(this.nodeService.currentPath).id;\r\n    return parentPath === 0 ? '' : parentPath;\r\n  }\r\n\r\n  uploadFiles() {\r\n    this.uploader.uploadStoredFiles();\r\n  }\r\n\r\n  createNewFolder(input?: string) {\r\n    if (!this.newFolder) {\r\n      this.newFolder = true;\r\n    } else {\r\n      this.newFolder = false;\r\n      if (input.length > 0) {\r\n        this.createDir.emit(input);\r\n        this.newClickedAction();\r\n      }\r\n    }\r\n  }\r\n\r\n  newClickedAction() {\r\n    this.uploader.cancelAll();\r\n    this.closeDialog.emit();\r\n  }\r\n}\r\n","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {_} from '@biesbjerg/ngx-translate-extract/dist/utils/utils';\r\n\r\n@Component({\r\n  selector: 'app-new-folder',\r\n  template: `<p class=\"new-folder-description\" translate>Type new folder name</p>\r\n<input #uploadFolder placeholder=\"{{'Folder name'}}\" (keyup)=\"onInputChange($event)\"\r\n       (keyup.enter)=\"onClick()\" onclick=\"this.select();\" type=\"text\" class=\"new-folder-input\"/>\r\n<button class=\"button new-folder-send\" (click)=\"onClick()\">{{buttonText}}</button>\r\n`,\r\n  styles: [`.new-folder-description{margin:0 auto;padding:0}`]\r\n})\r\nexport class NewFolderComponent implements OnInit {\r\n  @ViewChild('uploadFolder') uploadFolder: ElementRef;\r\n  @Output() buttonClicked = new EventEmitter();\r\n\r\n  buttonText = _('Close').toString();\r\n  inputValue = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick() {\r\n    const el: HTMLElement = (this.uploadFolder.nativeElement as HTMLElement);\r\n    // @ts-ignore\r\n    this.buttonClicked.emit(el.value);\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    this.inputValue = event.target.value;\r\n    if (this.inputValue.length > 0) {\r\n      this.buttonText = _('Confirm').toString();\r\n    } else {\r\n      this.buttonText = _('Close').toString();\r\n    }\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\r\nimport {NodeInterface} from '../../interfaces/node.interface';\r\n\r\n@Component({\r\n  selector: 'app-side-view',\r\n  template: `<div class=\"side-view\" *ngIf=\"node\">\r\n  <div class=\"side-view-preview\">\r\n    <i (click)=\"onClick($event, 'closeSideView')\" class=\"fas fa-times side-view-close\"></i>\r\n\r\n    <div class=\"side-view-preview-title\">{{node.name}}</div>\r\n\r\n    <div class=\"side-view-preview-content\">\r\n      <ng-container\r\n        [ngTemplateOutletContext]=\"{$implicit: node}\"\r\n        [ngTemplateOutlet]=\"sideViewTemplate\">\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"side-view-buttons\">\r\n      <button (click)=\"onClick($event, 'download')\" class=\"button\"\r\n              [disabled]=\"!allowFolderDownload && node.isFolder\" translate>\r\n        Download\r\n      </button>\r\n      <button (click)=\"onClick($event, 'renameConfirm')\" class=\"button\" translate>Rename</button>\r\n      <button (click)=\"onClick($event, 'removeAsk')\" class=\"button\" translate>Delete</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.side-view-close{position:absolute;cursor:pointer;top:0;right:0;padding:15px}.side-view-buttons{width:100%;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-flex-flow:column;flex-flow:column}.side-view-buttons .button{margin:5px 0}`],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SideViewComponent implements OnInit {\r\n  @Input() sideViewTemplate: TemplateRef<any>;\r\n\r\n  @Input() node: NodeInterface;\r\n  @Input() allowFolderDownload = false;\r\n\r\n  @Output() clickEvent = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick(event: any, type: string) {\r\n    this.clickEvent.emit({type: type, event: event, node: this.node});\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {NodeClickedService} from '../../services/node-clicked.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  template: `<div class=\"navigation-component\">\r\n  <input #input class=\"navigation-search\" onclick=\"this.select();\" (keyup.enter)=\"onClick(input.value)\"\r\n         placeholder=\"{{'Search'}}\">\r\n\r\n  <button [disabled]=\"input.value.length === 0\" class=\"navigation-search-icon\" (click)=\"onClick(input.value)\">\r\n    <i class=\"fas fa-search\"></i>\r\n  </button>\r\n\r\n  <div>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n\r\n\r\n`,\r\n  styles: [`.navigation-component{display:-webkit-flex;display:flex}`],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor(\r\n    private nodeClickedService: NodeClickedService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick(input: string) {\r\n    this.nodeClickedService.searchForString(input);\r\n  }\r\n}\r\n","// import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {NgModule, InjectionToken, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FileManagerComponent} from './file-manager.component';\r\nimport {FolderContentComponent} from './components/folder-content/folder-content.component';\r\nimport {TreeComponent} from './components/tree/tree.component';\r\nimport {NodeListerComponent} from './components/tree/node-lister/node-lister.component';\r\nimport {NodeComponent} from './components/functions/node/node.component';\r\nimport {MapToIterablePipe} from './pipes/map-to-iterable.pipe';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {StoreModule, ActionReducerMap} from '@ngrx/store';\r\nimport {NavBarComponent} from './components/nav-bar/nav-bar.component';\r\nimport {reducers, AppStore} from './reducers/reducer.factory';\r\nimport {LoadingOverlayComponent} from './components/functions/loading-overlay/loading-overlay.component';\r\nimport {FileSizePipe} from './pipes/file-size.pipe';\r\nimport {UploadComponent} from './components/functions/upload/upload.component';\r\nimport {NewFolderComponent} from './components/functions/upload/new-folder/new-folder.component';\r\nimport {SideViewComponent} from './components/side-view/side-view.component';\r\nimport {NavigationComponent} from './components/navigation/navigation.component';\r\nimport {NgxSmartModalModule} from 'ngx-smart-modal';\r\n\r\nconst FEATURE_REDUCER_TOKEN = new InjectionToken<\r\n  ActionReducerMap<AppStore>\r\n>('AppStore Reducers');\r\nexport function getReducers(): ActionReducerMap<AppStore> {\r\n  // map of reducers\r\n  return reducers;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule,\r\n    StoreModule.forRoot(FEATURE_REDUCER_TOKEN),\r\n    CommonModule,\r\n    NgxSmartModalModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    FileManagerComponent,\r\n    FolderContentComponent,\r\n    NodeComponent,\r\n    TreeComponent,\r\n    NodeListerComponent,\r\n    MapToIterablePipe,\r\n    NavBarComponent,\r\n    LoadingOverlayComponent,\r\n    FileSizePipe,\r\n    UploadComponent,\r\n    NewFolderComponent,\r\n    SideViewComponent,\r\n    NavigationComponent\r\n  ],\r\n  exports: [\r\n    FileManagerComponent,\r\n    LoadingOverlayComponent,\r\n    SideViewComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: FEATURE_REDUCER_TOKEN,\r\n      useFactory: getReducers,\r\n    },\r\n  ]\r\n})\r\nexport class FileManagerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: FileManagerModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {NodeInterface} from '../interfaces/node.interface';\r\nimport {ConfigInterface} from '../interfaces/config.interface';\r\n\r\nexport class TreeModel {\r\n  private _currentPath: string;\r\n  private _nodes: NodeInterface;\r\n  private _selectedNodeId: string;\r\n  public config: ConfigInterface;\r\n\r\n  constructor(config: ConfigInterface) {\r\n    // this._currentPath = config.startingFolder; // todo implement (config.interfce.ts)\r\n    this._currentPath = '';\r\n    this.config = config;\r\n\r\n    this.nodes = <NodeInterface>{\r\n      id: 0,\r\n      pathToNode: '',\r\n      pathToParent: null,\r\n      isFolder: true,\r\n      isExpanded: true,\r\n      stayOpen: true,\r\n      name: 'root',\r\n      children: {}\r\n    };\r\n  }\r\n\r\n  get currentPath(): string {\r\n    return this._currentPath;\r\n  }\r\n\r\n  set currentPath(value: string) {\r\n    this._currentPath = value;\r\n  }\r\n\r\n  get nodes(): NodeInterface {\r\n    return this._nodes;\r\n  }\r\n\r\n  set nodes(value: NodeInterface) {\r\n    this._nodes = value;\r\n  }\r\n\r\n  get selectedNodeId(): string {\r\n    return this._selectedNodeId;\r\n  }\r\n\r\n  set selectedNodeId(value: string) {\r\n    this._selectedNodeId = value;\r\n  }\r\n\r\n  // todo implement (config.interfce.ts)\r\n  // get isCache(): boolean {\r\n  //   return this.config.offlineMode;\r\n  // }\r\n  //\r\n  // set isCache(value: boolean) {\r\n  //   this.config.offlineMode = value;\r\n  // }\r\n}\r\n"]}