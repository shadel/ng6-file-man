!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/common/http"),require("@ngrx/store"),require("ngx-smart-modal"),require("@ngx-translate/core"),require("rxjs/operators"),require("@biesbjerg/ngx-translate-extract/dist/utils/utils"),require("fine-uploader"),require("@angular/common"),require("@ngx-translate/http-loader")):"function"==typeof define&&define.amd?define("ng6-file-man",["exports","@angular/core","rxjs","@angular/common/http","@ngrx/store","ngx-smart-modal","@ngx-translate/core","rxjs/operators","@biesbjerg/ngx-translate-extract/dist/utils/utils","fine-uploader","@angular/common","@ngx-translate/http-loader"],t):t(e["ng6-file-man"]={},e.ng.core,e.rxjs,e.ng.common.http,null,null,null,e.rxjs.operators,null,null,e.ng.common,null)}(this,function(e,a,t,o,i,n,l,r,s,d,p,c){"use strict";var u="SET_PATH",h="SET_LOADING_STATE",g="SET_SELECTED_NODE",f=function(){function e(e,t){var n=this;this.http=e,this.store=t,this.getNodesFromServer=function(e){var t=n.findNodeByPath(e).id;return t=0===t?"":t,n.http.get(n.tree.config.baseURL+n.tree.config.api.listFile,{params:(new o.HttpParams).set("parentPath",t)})}}return e.prototype.startManagerAt=function(e){this.store.dispatch({type:u,payload:e})},e.prototype.refreshCurrentPath=function(){this.findNodeByPath(this.currentPath).children={},this.getNodes(this.currentPath)},e.prototype.getNodes=function(e){var o=this;this.parseNodes(e).subscribe(function(e){for(var t=0;t<e.length;t++){var n=o.getParentPath(e[t].pathToNode);o.findNodeByPath(n).children[e[t].name]=e[t]}})},e.prototype.getParentPath=function(e){var t=e.split("/");return(t=t.slice(0,t.length-1)).join("/")},e.prototype.parseNodes=function(n){var o=this;return new t.Observable(function(t){o.getNodesFromServer(n).subscribe(function(e){t.next(e.map(function(e){return o.createNode(n,e)})),o.store.dispatch({type:h,payload:!1})})})},e.prototype.createNode=function(e,t){"/"!==t.path[0]&&(console.warn('[Node Service] Server should return initial path with "/"'),t.path="/"+t.path);var n=t.path.split("/");2<n.length&&""===n[n.length-1]&&(n.splice(-1,1),t.path=n.join("/"));var o=this.findNodeByPath(t.path);return{id:t.id,isFolder:t.dir,isExpanded:!!o&&o.isExpanded,pathToNode:t.path,pathToParent:this.getParentPath(t.path),name:t.name||t.id,children:o?o.children:{}}},e.prototype.findNodeByPath=function(e){var t=e.split("/");return t.splice(0,1),0===t.length?this.tree.nodes:t.reduce(function(e,t){return e.children[t]},this.tree.nodes)},e.prototype.findNodeById=function(e){var t=this.findNodeByIdHelper(e);return null===t?(console.warn("[Node Service] Cannot find node by id. Id not existing or not fetched. Returning root."),this.tree.nodes):t},e.prototype.findNodeByIdHelper=function(e,t){if(void 0===t&&(t=this.tree.nodes),t.id===e)return t;for(var n=Object.keys(t.children),o=0;o<n.length;o++)if("object"==typeof t.children[n[o]]){var i=this.findNodeByIdHelper(e,t.children[n[o]]);if(null!=i)return i}return null},e.prototype.foldRecursively=function(e){var t=this,n=e.children;Object.keys(n).map(function(e){if(!n.hasOwnProperty(e)||!n[e].isExpanded)return null;t.foldRecursively(n[e]),document.getElementById("tree_"+n[e].pathToNode).classList.add("deselected"),n[e].isExpanded=!1})},e.prototype.foldAll=function(){this.foldRecursively(this.tree.nodes)},Object.defineProperty(e.prototype,"currentPath",{get:function(){return this._path},set:function(e){this._path=e},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:o.HttpClient},{type:i.Store}]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject(o.HttpClient),a.inject(i.Store))},token:e,providedIn:"root"}),e}(),m=function(){function e(e,t,n,o){this.ngxSmartModalService=e,this.nodeService=t,this.store=n,this.http=o}return e.prototype.startDownload=function(e){var t=this.parseParams({path:e.id});this.reachServer("download",this.tree.config.api.downloadFile+t)},e.prototype.initDelete=function(e){var t=this;this.sideEffectHelper("Delete",{path:e.id},"delete",this.tree.config.api.deleteFile,function(){return t.successWithModalClose()})},e.prototype.searchForString=function(t){var n=this;this.sideEffectHelper("Search",{query:t},"get",this.tree.config.api.searchFiles,function(e){return n.searchSuccess(t,e)})},e.prototype.createFolder=function(e,t){this.sideEffectHelper("Create Folder",{dirName:t,parentPath:0===e?null:e},"post",this.tree.config.api.createFolder)},e.prototype.rename=function(e,t){var n=this;this.sideEffectHelper("Rename",{path:e,newName:t},"post",this.tree.config.api.renameFile,function(){return n.successWithModalClose()})},e.prototype.sideEffectHelper=function(t,e,n,o,i,a){var l=this;void 0===i&&(i=function(e){return l.actionSuccess(e)}),void 0===a&&(a=function(e,t){return l.actionFailed(e,t)});var r=this.parseParams(e);this.ngxSmartModalService.getModal("waitModal").open(),this.reachServer(n,o+r).subscribe(function(e){return i(e)},function(e){return a(t,e)})},e.prototype.reachServer=function(e,t,n){switch(void 0===n&&(n={}),e.toLowerCase()){case"get":return this.http.get(this.tree.config.baseURL+t);case"post":return this.http.post(this.tree.config.baseURL+t,n);case"delete":return this.http["delete"](this.tree.config.baseURL+t);case"download":return window.open(this.tree.config.baseURL+t,"_blank"),null;default:return console.warn("[NodeClickedService] Incorrect params for this side-effect"),null}},e.prototype.parseParams=function(t){var n="?";return Object.keys(t).filter(function(e){return null!==t[e]}).map(function(e){n+=e+"="+t[e]+"&"}),n.slice(0,-1)},e.prototype.successWithModalClose=function(){this.actionSuccess(),document.getElementById("side-view").classList.remove("selected")},e.prototype.searchSuccess=function(e,t){var n={searchString:e,response:t};this.actionSuccess(),this.ngxSmartModalService.setModalData(n,"searchModal",!0),this.ngxSmartModalService.getModal("searchModal").open()},e.prototype.actionSuccess=function(e){void 0===e&&(e=""),document.body.classList.remove("dialog-open"),this.nodeService.refreshCurrentPath(),this.ngxSmartModalService.getModal("waitModal").close()},e.prototype.actionFailed=function(e,t){document.body.classList.remove("dialog-open"),this.ngxSmartModalService.getModal("waitModal").close(),this.ngxSmartModalService.getModal("errorModal").open(),console.warn('[NodeClickedService] Action "'+e+'" failed',t)},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.NgxSmartModalService},{type:f},{type:i.Store},{type:o.HttpClient}]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject(n.NgxSmartModalService),a.inject(f),a.inject(i.Store),a.inject(o.HttpClient))},token:e,providedIn:"root"}),e}(),v=function(){function e(e,t,n,o,i){this.store=e,this.nodeService=t,this.nodeClickedService=n,this.ngxSmartModalService=o,this.translate=i,this.isPopup=!1,this.itemClicked=new a.EventEmitter,this._language="en",this.sideMenuClosed=!0,this.fmOpen=!1,this.newDialog=!1,i.setDefaultLang("en"),i.use("en")}return Object.defineProperty(e.prototype,"language",{get:function(){return this._language},set:function(e){this._language=e,this.translate.use(this.language)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var t=this;window.console=window.console||{},window.console.log=window.console.log||function(){},this.nodeService.tree=this.tree,this.nodeClickedService.tree=this.tree,this.nodeService.startManagerAt(this.tree.currentPath),this.store.pipe(i.select(function(e){return e.fileManagerState.isLoading})).subscribe(function(e){t.loading=e}),this.store.pipe(i.select(function(e){return e.fileManagerState.selectedNode})).subscribe(function(e){e&&(e.isExpanded&&e.pathToNode!==t.nodeService.currentPath&&!e.stayOpen||t.handleFileManagerClickEvent({type:"select",node:e}))})},e.prototype.onItemClicked=function(e){this.itemClicked.emit(e)},e.prototype.searchClicked=function(e){var t=this.nodeService.findNodeById(e.id);this.ngxSmartModalService.getModal("searchModal").close(),this.store.dispatch({type:g,payload:t})},e.prototype.handleFileManagerClickEvent=function(e){switch(e.type){case"closeSideView":return this.nodeClickHandler(e.node,!0);case"select":return this.onItemClicked(e),this.highlightSelected(e.node),this.nodeClickHandler(e.node);case"download":return this.nodeClickedService.startDownload(e.node),this.onItemClicked(e);case"renameConfirm":return this.ngxSmartModalService.getModal("renameModal").open();case"rename":return this.ngxSmartModalService.getModal("renameModal").close(),this.nodeClickedService.rename(this.selectedNode.id,e.value),this.onItemClicked({type:e.type,node:this.selectedNode,newName:e.value});case"removeAsk":return this.ngxSmartModalService.getModal("confirmDeleteModal").open();case"remove":return this.ngxSmartModalService.getModal("confirmDeleteModal").close(),this.nodeClickedService.initDelete(this.selectedNode),this.onItemClicked({type:e.type,node:this.selectedNode});case"createFolder":var t=this.nodeService.findNodeByPath(this.nodeService.currentPath).id;return this.nodeClickedService.createFolder(t,e.payload),this.onItemClicked({type:e.type,parentId:t,newDirName:e.payload})}},e.prototype.nodeClickHandler=function(e,t){if("root"!==e.name){if(t){var n=this.nodeService.findNodeByPath(this.nodeService.currentPath);this.store.dispatch({type:g,payload:n}),this.sideMenuClosed=!0}else this.selectedNode===e&&this.sideMenuClosed?this.sideMenuClosed=!1:this.selectedNode!==e||this.sideMenuClosed?this.selectedNode!==e&&this.sideMenuClosed?this.sideMenuClosed=!1:this.selectedNode===e||this.sideMenuClosed||(this.sideMenuClosed=!1):this.sideMenuClosed=!0;this.selectedNode=e,document.getElementById("side-view")&&(this.sideMenuClosed?document.getElementById("side-view").classList.remove("selected"):document.getElementById("side-view").classList.add("selected"))}},e.prototype.highlightSelected=function(e){var t=e.pathToNode;0===t.length&&(t="root");var n=this.getElementById(t,"tree_"),o=this.getElementById(t,"fc_");if(n||o){this.removeClass("highlighted"),this.removeClass("light"),o&&this.highilghtChildElement(o),n&&this.highilghtChildElement(n,!0);var i=e.pathToParent;if(null!==i&&e.pathToNode!==this.nodeService.currentPath){0===i.length&&(i="root");var a=this.getElementById(i,"tree_");a?this.highilghtChildElement(a):console.warn("[File Manager] failed to find requested parent node for path:",i)}}else console.warn("[File Manager] failed to find requested node for path:",t)},e.prototype.highilghtChildElement=function(e,t){void 0===t&&(t=!1),e.children[0].children[0].classList.add("highlighted"),t&&e.children[0].children[0].classList.add("light")},e.prototype.getElementById=function(e,t){void 0===t&&(t="");var n=t+e;return document.getElementById(n)},e.prototype.removeClass=function(t){Array.from(document.getElementsByClassName(t)).map(function(e){return e.classList.remove(t)})},e.prototype.fmShowHide=function(){this.fmOpen=!this.fmOpen},e.prototype.backdropClicked=function(){this.store.dispatch({type:h,payload:!1})},e.prototype.handleUploadDialog=function(e){this.newDialog=e},e.decorators=[{type:a.Component,args:[{selector:"fm-file-manager",template:'<ng-container *ngIf="isPopup; then itIsPopup else showContent"></ng-container>\n\n<ng-template #itIsPopup>\n  <div *ngIf="!fmOpen">\n    <button class="button big" (click)="fmShowHide()" translate="">Open file manager</button>\n  </div>\n  <div class="file-manager-backdrop" *ngIf="fmOpen">\n    <div class="fmModalInside">\n      <div *ngIf="fmOpen; then showContent"></div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #showContent>\n  <div class="content">\n    <div class="file-manager-navbar">\n      <div class="path">\n        <app-nav-bar></app-nav-bar>\n      </div>\n\n      <div class="navigation">\n        <app-navigation>\n          <div class="button close" (click)="fmShowHide()" *ngIf="isPopup">\n            <i class="fas fa-2x fa-times"></i>\n          </div>\n        </app-navigation>\n      </div>\n    </div>\n\n    <div class="holder">\n      <div class="file-manager-left">\n        <app-tree [treeModel]="tree">\n          <ng-template let-nodes>\n            <ng-container [ngTemplateOutletContext]="{$implicit: nodes}"\n                          [ngTemplateOutlet]="iconTemplate ? iconTemplate : defaultIconTemplate">\n            </ng-container>\n          </ng-template>\n        </app-tree>\n      </div>\n\n      <div class="right">\n        <app-folder-content\n          [treeModel]="tree"\n          (openUploadDialog)="handleUploadDialog($event)"\n          [folderContentTemplate]="folderContentTemplate ? folderContentTemplate : defaultFolderContentTemplate"\n          [folderContentNewTemplate]="folderContentNewTemplate ? folderContentNewTemplate : defaultFolderContentNewTemplate"\n          [folderContentBackTemplate]="folderContentBackTemplate ? folderContentBackTemplate : defaultFolderContentBackTemplate">\n        </app-folder-content>\n      </div>\n\n      <app-side-view id="side-view"\n                     [node]="selectedNode"\n                     [sideViewTemplate]="sideViewTemplate ? sideViewTemplate : defaultSideViewTemplate"\n                     [allowFolderDownload]="tree.config.options.allowFolderDownload"\n                     (clickEvent)="handleFileManagerClickEvent($event)">\n      </app-side-view>\n    </div>\n  </div>\n\n  <app-upload *ngIf="newDialog"\n              [openDialog]="newDialog"\n              (closeDialog)="handleUploadDialog(false)"\n              (createDir)="handleFileManagerClickEvent({type: \'createFolder\', payload: $event})">\n  </app-upload>\n\n  <app-loading-overlay\n    *ngIf="loading"\n    [loadingOverlayTemplate]="loadingOverlayTemplate ? loadingOverlayTemplate : defaultLoadingOverlayTemplate">\n  </app-loading-overlay>\n</ng-template>\n\n<ng-template let-node #defaultIconTemplate>\n  <div class="file-manager-node" style="display: inline-block; padding: 3px">\n    <div *ngIf="node.isFolder; then itIsFolder else showFile"></div>\n\n    <ng-template #itIsFolder>\n      <div *ngIf="node.isExpanded; then isFolderExpanded else isFolderClosed"></div>\n    </ng-template>\n\n    <ng-template #showFile><i class="fas fa-file child"></i></ng-template>\n    <ng-template #isFolderExpanded><i class="fas fa-folder-open child"></i></ng-template>\n    <ng-template #isFolderClosed><i class="fas fa-folder child"></i></ng-template>\n\n    <span>{{node.name}}</span>\n  </div>\n</ng-template>\n<ng-template let-node #defaultFolderContentTemplate>\n  <div class="file-manager-item">\n    <div class="file-preview">\n      <div *ngIf="node.isFolder; then itIsFolder else showFile"></div>\n      <ng-template #itIsFolder><i class="fas fa-3x fa-folder child"></i></ng-template>\n      <ng-template #showFile><i class="fas fa-3x fa-file child"></i></ng-template>\n    </div>\n    <div class="file-name">\n      {{node.name}}\n    </div>\n  </div>\n</ng-template>\n<ng-template #defaultFolderContentNewTemplate>\n  <div class="file-manager-item">\n    <div class="file-preview" style="width: 100%; height:100%">\n      <i class="fas fa-3x fa-plus child" style="line-height: 2"></i>\n    </div>\n  </div>\n</ng-template>\n<ng-template let-node #defaultFolderContentBackTemplate>\n  <div class="file-manager-item">\n    <div class="file-preview" style="width: 100%; height:100%">\n      <i class="fas fa-2x fa-ellipsis-h" style="line-height: 5"></i>\n    </div>\n  </div>\n</ng-template>\n<ng-template let-timeoutMessage #defaultLoadingOverlayTemplate>\n  <div class="file-manager-backdrop loading" (click)="backdropClicked()">\n    <div class="file-manager-error" *ngIf="timeoutMessage">{{timeoutMessage | translate}}</div>\n  </div>\n  <div class="spinner">\n    <i class="fas fa-5x fa-spin fa-sync-alt"></i>\n  </div>\n</ng-template>\n<ng-template let-node #defaultSideViewTemplate>\n  <div style="position: absolute; bottom: 0; width: 100%; margin: 5px auto">\n    <span *ngIf="node.isFolder" translate>No data available for this folder</span>\n    <span *ngIf="!node.isFolder" translate>No data available for this file</span>\n  </div>\n</ng-template>\n\n<ngx-smart-modal identifier="renameModal" [dismissable]="false" [closable]="false" *ngIf="selectedNode" #renameModal>\n  <h2 class="modal-title" translate>\n    Rename file\n  </h2>\n  <p class="rename-name" translate>\n    Old name\n  </p>\n  <span style="margin: 8px">{{selectedNode.name}}</span>\n  <p class="rename-name" translate>\n    New name\n  </p>\n  <input placeholder="New name" type="text" class="rename-input" [value]="selectedNode.name" #renameInput\n         (keyup.enter)="handleFileManagerClickEvent({type: \'rename\', value: renameInput.value})"\n         onclick="this.select();">\n  <br>\n\n  <div class="rename-button">\n    <button class="button big" translate\n            (click)="handleFileManagerClickEvent({type: \'rename\', value: renameInput.value})"\n            [disabled]="renameInput.value === selectedNode.name || renameInput.value.length === 0">\n      Rename\n    </button>\n    <button class="button big" (click)="renameModal.close()" translate>\n      Cancel\n    </button>\n  </div>\n\n</ngx-smart-modal>\n<ngx-smart-modal *ngIf="selectedNode" identifier="confirmDeleteModal" #deleteModal\n                 [dismissable]="false" [closable]="false">\n  <h2 class="modal-title">\n    <span translate>You are trying to delete following </span>\n    <span *ngIf="selectedNode.isFolder" translate>folder</span>\n    <span *ngIf="!selectedNode.isFolder" translate>file</span>\n  </h2>\n\n  <div style="width: 100%; margin: 5px auto; text-align: center">{{selectedNode.name}}</div>\n\n  <div class="rename-button">\n    <button class="button big" (click)="handleFileManagerClickEvent({type: \'remove\'})">\n      <span translate>Yes, delete this </span>\n      <span *ngIf="selectedNode.isFolder" translate>folder</span>\n      <span *ngIf="!selectedNode.isFolder" translate>file</span>\n    </button>\n    <button class="button big" (click)="deleteModal.close()" translate>\n      Cancel\n    </button>\n  </div>\n</ngx-smart-modal>\n<ngx-smart-modal identifier="searchModal" #searchModal [closable]="true">\n  <h2 class="modal-title" style="margin-bottom: 2px" translate\n      *ngIf="searchModal.hasData() && searchModal.getData().response.length !== 0">\n    Search results for\n  </h2>\n  <h2 class="modal-title" style="margin-bottom: 2px" translate\n      *ngIf="!searchModal.hasData() || searchModal.getData().response.length === 0">\n    No results found for\n  </h2>\n  <div style="text-align: center" *ngIf="searchModal.hasData()">{{searchModal.getData().searchString}}</div>\n\n  <div *ngIf="searchModal.hasData() && searchModal.getData().response.length !== 0">\n    <table style="margin: 0 auto">\n      <tr>\n        <td class="table-item table-head" translate>File name</td>\n        <td class="table-item-short table-head" translate>Size</td>\n      </tr>\n      <tr *ngFor="let item of searchModal.getData().response" (click)="searchClicked(item)">\n        <td style="cursor: pointer">\n          <ng-container *ngIf="item.fileCategory === \'D\'; else file">\n            <i class="fas fa-folder search-output-icon"></i>\n          </ng-container>\n          <ng-template #file>\n            <i class="fas fa-file search-output-icon"></i>\n          </ng-template>\n          <span style="text-overflow: ellipsis">{{item.name}}</span>\n        </td>\n        <td class="table-item-short">{{item.size}}</td>\n      </tr>\n    </table>\n  </div>\n</ngx-smart-modal>\n<ngx-smart-modal identifier="waitModal" [closable]="false" [dismissable]="false" [escapable]="false">\n  <h2 class="modal-title" style="margin-top: 20px">\n    {{\'Processing request\' | translate}}...\n  </h2>\n\n  <div style="text-align: center; height: 70px">\n    <i class="fas fa-spinner fa-spin fa-4x"></i>\n  </div>\n</ngx-smart-modal>\n<ngx-smart-modal identifier="errorModal" [closable]="true">\n  <h2 class="modal-title" style="margin-top: 20px">\n    {{\'Something went wrong with your request\' | translate}}...\n  </h2>\n</ngx-smart-modal>\n',styles:[".content{height:100%;min-width:850px}.holder{display:-webkit-flex;display:flex;height:calc(100% - 75px)}.path{margin:auto 0;display:block}.navigation{margin:auto 0;display:-webkit-flex;display:flex}.navigation .button{margin:0 10px;padding:0;position:relative}.right{width:100%;position:relative;overflow:auto}.file-name{width:100px;height:25px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.file-preview{margin:auto}.file-preview i{line-height:1.5}.spinner{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);cursor:progress}.rename-button{margin:20px auto;display:block;text-align:center}.modal-title{margin-top:5px;text-align:center}.search-output{margin:15px 0}.search-output-icon{margin:2px 5px}.table-item{width:80%}.table-item-short{width:20%;text-align:right}"],encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:i.Store},{type:f},{type:m},{type:n.NgxSmartModalService},{type:l.TranslateService}]},e.propDecorators={iconTemplate:[{type:a.Input}],folderContentTemplate:[{type:a.Input}],folderContentBackTemplate:[{type:a.Input}],folderContentNewTemplate:[{type:a.Input}],loadingOverlayTemplate:[{type:a.Input}],sideViewTemplate:[{type:a.Input}],tree:[{type:a.Input}],isPopup:[{type:a.Input}],itemClicked:[{type:a.Output}],language:[{type:a.Input}]},e}(),y=function(){function e(e,t){this.nodeService=e,this.store=t,this.openUploadDialog=new a.EventEmitter,this.obj=Object}return e.prototype.ngOnInit=function(){var t=this;this.store.pipe(i.select(function(e){return e.fileManagerState.path})).subscribe(function(e){t.nodes=t.nodeService.findNodeByPath(e)})},e.prototype.newClickedAction=function(){this.openUploadDialog.emit(!0)},e.decorators=[{type:a.Component,args:[{selector:"app-folder-content",template:'<div class="item-holder">\n  <ng-container *ngIf="nodes.id !== 0">\n    <app-node [node]=nodes id="{{nodes.pathToNode}}">\n      <ng-container [ngTemplateOutletContext]="{$implicit: nodes}"\n                    [ngTemplateOutlet]="folderContentBackTemplate">\n      </ng-container>\n    </app-node>\n  </ng-container>\n\n  <ng-container *ngFor="let node of obj.keys(nodes.children)">\n    <app-node [node]="nodes.children[node]"\n              id="fc_{{nodes.children[node].pathToNode}}">\n      <ng-container [ngTemplateOutletContext]="{$implicit: nodes.children[node]}"\n                    [ngTemplateOutlet]="folderContentTemplate">\n      </ng-container>\n    </app-node>\n  </ng-container>\n\n  <div class="new" (click)="newClickedAction()">\n    <ng-container [ngTemplateOutlet]="folderContentNewTemplate"></ng-container>\n  </div>\n</div>\n',styles:[".item-holder{box-sizing:border-box;display:-webkit-flex;display:flex;-webkit-flex-flow:wrap;flex-flow:wrap}.item-holder .new{display:inline}"]}]}],e.ctorParameters=function(){return[{type:f},{type:i.Store}]},e.propDecorators={folderContentTemplate:[{type:a.Input}],folderContentBackTemplate:[{type:a.Input}],folderContentNewTemplate:[{type:a.Input}],treeModel:[{type:a.Input}],openUploadDialog:[{type:a.Output}]},e}(),b=function(){function e(e,t){this.nodeService=e,this.store=t,this.currentTreeLevel=""}return e.prototype.ngOnInit=function(){var t=this;this.nodes=this.treeModel.nodes,this.store.pipe(i.select(function(e){return e.fileManagerState.path})).subscribe(function(e){return t.nodeService.getNodes(e),t.currentTreeLevel=t.treeModel.currentPath,t.treeModel.currentPath=e})},e.prototype.ngAfterViewInit=function(){var n=this;this.store.pipe(i.select(function(e){return e.fileManagerState.path})).pipe(r.first()).subscribe(function(e){var t=n.nodeService.findNodeByPath(e);n.store.dispatch({type:g,payload:t})})},e.decorators=[{type:a.Component,args:[{selector:"app-tree",template:'<app-node-lister [showFiles]="treeModel.config.options.showFilesInsideTree"\n                 [nodes]="{children: nodes}">\n  <ng-template let-nodes>\n    <ng-container [ngTemplateOutletContext]="{$implicit: nodes}" [ngTemplateOutlet]="templateRef"></ng-container>\n  </ng-template>\n</app-node-lister>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:f},{type:i.Store}]},e.propDecorators={templateRef:[{type:a.ContentChild,args:[a.TemplateRef]}],treeModel:[{type:a.Input}]},e}(),q=function(){function e(){this.obj=Object}return e.prototype.ngOnInit=function(){},e.decorators=[{type:a.Component,args:[{selector:"app-node-lister",template:'<ul class="node-lister-flist">\n  \x3c!--In order to avoid having to create that extra div, we can instead use ng-container directive--\x3e\n  <ng-container *ngFor="let node of obj.keys(nodes)">\n    <li class="node-lister-list-item" *ngIf="nodes[node].isFolder || showFiles">\n\n      <app-node class="node-lister-app-node" [node]="nodes[node]" id="tree_{{nodes[node].id === 0 ? \'root\' : nodes[node].pathToNode}}">\n        <ng-container [ngTemplateOutletContext]="{$implicit: (nodes[node])}"\n                      [ngTemplateOutlet]="templateRef">\n        </ng-container>\n      </app-node>\n\n      <app-node-lister class="node-lister" *ngIf="obj.keys(nodes[node].children).length > 0"\n                       [showFiles]="showFiles" [nodes]="nodes[node].children">\n        <ng-template let-nodes>\n          <ng-container [ngTemplateOutletContext]="{$implicit: (nodes)}"\n                        [ngTemplateOutlet]="templateRef">\n          </ng-container>\n        </ng-template>\n      </app-node-lister>\n    </li>\n  </ng-container>\n</ul>\n',styles:[".node-lister-flist{margin:0 0 0 1em;padding:0;list-style:none;white-space:nowrap}.node-lister-list-item{list-style:none;line-height:1.2em;font-size:1em;display:inline}.node-lister-list-item .node-lister-app-node.deselected+.node-lister ul{display:none}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={templateRef:[{type:a.ContentChild,args:[a.TemplateRef]}],nodes:[{type:a.Input}],showFiles:[{type:a.Input}]},e}(),x=function(){function e(e,t,n){this.store=e,this.nodeService=t,this.nodeClickedService=n,this.isSingleClick=!0}return e.prototype.method1CallForClick=function(e){var t=this;e.preventDefault(),this.isSingleClick=!0,setTimeout(function(){t.isSingleClick&&t.showMenu()},200)},e.prototype.method2CallForDblClick=function(e){e.preventDefault(),this.isSingleClick=!1,this.open()},e.prototype.ngOnInit=function(){},e.prototype.open=function(){if(this.node.isFolder){if(this.node.stayOpen)return"root"==this.node.name&&this.nodeService.foldAll(),void this.store.dispatch({type:u,payload:this.node.pathToNode});this.toggleNodeExpanded(),this.node.isExpanded&&this.store.dispatch({type:u,payload:this.node.pathToNode}),this.setNodeSelectedState()}else this.nodeClickedService.startDownload(this.node)},e.prototype.showMenu=function(){this.store.dispatch({type:g,payload:this.node})},e.prototype.toggleNodeExpanded=function(){this.node.isExpanded=!this.node.isExpanded},e.prototype.setNodeSelectedState=function(){this.node.isExpanded?document.getElementById("tree_"+this.node.pathToNode).classList.remove("deselected"):(document.getElementById("tree_"+this.node.pathToNode).classList.add("deselected"),this.nodeService.foldRecursively(this.node),this.store.dispatch({type:u,payload:this.node.pathToParent}))},e.decorators=[{type:a.Component,args:[{selector:"app-node",template:'<div #customTemplate (dblclick)="method2CallForDblClick($event)" (click)="method1CallForClick($event)">\n  <ng-content></ng-content>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:i.Store},{type:f},{type:m}]},e.propDecorators={node:[{type:a.Input}]},e}(),w=function(){function e(){}return e.prototype.transform=function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push({key:n,val:e[n]});return t},e.decorators=[{type:a.Pipe,args:[{name:"mapToIterablePipe"}]}],e}(),C=function(){function e(e,t){this.store=e,this.nodeService=t}return e.prototype.ngOnInit=function(){var t=this;this.store.pipe(i.select(function(e){return e.fileManagerState.path})).subscribe(function(e){t.nodeService.currentPath=e,t.currentPath=e.split("/")})},e.prototype.onClick=function(e,t){var n=e.slice(0,t+1).join("/");this.store.dispatch({type:u,payload:n})},e.decorators=[{type:a.Component,args:[{selector:"app-nav-bar",template:'<div>\n  >> <span *ngFor="let to of currentPath; let i = index">\n  <a class="link" (click)="onClick(currentPath, i)">\n    <div *ngIf="to === \'\' || to === \'root\'; then icon else name"></div>\n    <ng-template #icon><i class="fas fa-home"></i></ng-template>\n    <ng-template #name>{{to}}</ng-template>\n  </a> /\n  </span>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:i.Store},{type:f}]},e}(),k=function(){return(k=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},S={path:"",isLoading:!0,selectedNode:null};function I(e,t){switch(void 0===e&&(e=S),t.type){case u:return e.path===t.payload?e:k({},e,{path:t.payload,isLoading:!0});case h:return k({},e,{isLoading:t.payload});case g:return k({},e,{selectedNode:t.payload});default:return S}}var M={fileManagerState:I},T=function(){function e(){}return e.prototype.ngOnInit=function(){var e=this;t.timer(2e3).subscribe(function(){e.timeoutMessage=s._("Troubles with loading? Click anywhere to cancel loading")})},e.decorators=[{type:a.Component,args:[{selector:"app-loading-overlay",template:'<ng-container\n  [ngTemplateOutletContext]="{$implicit: timeoutMessage}"\n  [ngTemplateOutlet]="loadingOverlayTemplate">\n</ng-container>\n',styles:[""]}]}],e.propDecorators={loadingOverlayTemplate:[{type:a.Input}]},e}(),N=function(){function e(){this.units=["bytes","KB","MB","GB","TB","PB"]}return e.prototype.transform=function(e,t){if(void 0===e&&(e=0),void 0===t&&(t=2),isNaN(parseFloat(String(e)))||!isFinite(e))return"?";for(var n=0;1024<=e;)e/=1024,n++;return e.toFixed(+t)+" "+this.units[n]},e.decorators=[{type:a.Pipe,args:[{name:"fileSize"}]}],e}(),F=function(){function e(e,t){this.http=e,this.nodeService=t,this.closeDialog=new a.EventEmitter,this.createDir=new a.EventEmitter,this.newFolder=!1,this.counter=0}return e.prototype.ngAfterViewInit=function(){var n=this;this.uploader=new d.FineUploader({debug:!1,autoUpload:!1,maxConnections:1,element:document.getElementById("fine-uploader"),template:document.getElementById("fine-uploader-template"),request:{endpoint:this.nodeService.tree.config.baseURL+this.nodeService.tree.config.api.uploadFile,paramsInBody:!1,params:{parentPath:this.getCurrentPath}},retry:{enableAuto:!1},callbacks:{onSubmitted:function(){return n.counter++},onCancel:function(){n.counter<0?console.warn("wtf?"):n.counter--},onAllComplete:function(e,t){0<e.length&&(n.counter=0,n.nodeService.refreshCurrentPath())}}})},e.prototype.ngOnInit=function(){},Object.defineProperty(e.prototype,"getCurrentPath",{get:function(){var e=this.nodeService.findNodeByPath(this.nodeService.currentPath).id;return 0===e?"":e},enumerable:!0,configurable:!0}),e.prototype.uploadFiles=function(){this.uploader.uploadStoredFiles()},e.prototype.createNewFolder=function(e){this.newFolder?(this.newFolder=!1,0<e.length&&(this.createDir.emit(e),this.newClickedAction())):this.newFolder=!0},e.prototype.newClickedAction=function(){this.uploader.cancelAll(),this.closeDialog.emit()},e.decorators=[{type:a.Component,args:[{selector:"app-upload",template:'<div class="backdrop" (click)="newClickedAction()"></div>\n<div class="upload-background">\n  <div class="buttons">\n    <button class="button" [disabled]="newFolder" (click)="createNewFolder()" translate>Create new folder</button>\n  </div>\n\n  <div *ngIf="newFolder">\n    <div class="buttons">\n      <app-new-folder (buttonClicked)="createNewFolder($event)"></app-new-folder>\n    </div>\n  </div>\n\n  <div id="fine-uploader">\n  </div>\n\n\n  <div class="buttons">\n    <button class="button big" [disabled]="this.counter < 1" (click)="uploadFiles()" translate>\n      Upload\n    </button>\n    <button class="button big" (click)="newClickedAction()" translate>\n      Close\n    </button>\n  </div>\n\n</div>\n\n<div id="fine-uploader-template" style="display: none;">\n  <div class="qq-uploader-selector qq-uploader" qq-drop-area-text="Drop files here">\n    <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>\n      <span class="qq-upload-drop-area-text-selector"></span>\n    </div>\n\n    <div class="upload-top-bar">\n      <div class="qq-upload-button-selector qq-upload-button">\n        <div translate>Upload a file</div>\n      </div>\n\n      <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">\n        <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"\n             class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>\n      </div>\n    </div>\n\n    <span class="qq-drop-processing-selector qq-drop-processing">\n            <span translate>Processing dropped files</span>...\n            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>\n    </span>\n\n    <ul class="qq-upload-list-selector qq-upload-list" aria-live="polite" aria-relevant="additions removals">\n      <li>\n        <div class="qq-progress-bar-container-selector">\n          <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"\n               class="qq-progress-bar-selector qq-progress-bar"></div>\n        </div>\n        <span class="qq-upload-spinner-selector qq-upload-spinner"></span>\n        <img class="qq-thumbnail-selector" qq-max-size="100" qq-server-scale>\n        <span class="qq-upload-file-selector qq-upload-file"></span>\n        <span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>\n        <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">\n        <span class="qq-upload-size-selector qq-upload-size"></span>\n        <button type="button" class="qq-btn qq-upload-cancel-selector qq-upload-cancel" translate>Cancel</button>\n        <button type="button" class="qq-btn qq-upload-retry-selector qq-upload-retry" translate>Retry</button>\n        <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete" translate>Delete</button>\n        <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>\n      </li>\n    </ul>\n\n    <dialog class="qq-alert-dialog-selector">\n      <div class="qq-dialog-message-selector"></div>\n      <div class="qq-dialog-buttons">\n        <button type="button" class="qq-cancel-button-selector" translate>Close</button>\n      </div>\n    </dialog>\n\n    <dialog class="qq-confirm-dialog-selector">\n      <div class="qq-dialog-message-selector"></div>\n      <div class="qq-dialog-buttons">\n        <button type="button" class="qq-cancel-button-selector" translate>No</button>\n        <button type="button" class="qq-ok-button-selector" translate>Yes</button>\n      </div>\n    </dialog>\n\n    <dialog class="qq-prompt-dialog-selector">\n      <div class="qq-dialog-message-selector"></div>\n      <input type="text">\n      <div class="qq-dialog-buttons">\n        <button type="button" class="qq-cancel-button-selector" translate>Cancel</button>\n        <button type="button" class="qq-ok-button-selector" translate>Ok</button>\n      </div>\n    </dialog>\n  </div>\n</div>\n',styles:['.upload-content{text-align:center;max-height:25vh;overflow:auto;margin:10px auto}.fa-times:before{content:"\\f00d"}.buttons{background:#fff;padding:5px;margin:10px 0}','.qq-upload-button div{line-height:25px}.qq-upload-button-focus{outline:0}.qq-uploader{position:relative;min-height:200px;max-height:490px;overflow-y:hidden;width:inherit;border-radius:6px;background-color:#fdfdfd;border:1px dashed #ccc;padding:20px}.qq-uploader:before{content:attr(qq-drop-area-text) " ";position:absolute;font-size:200%;left:0;width:100%;text-align:center;top:45%;opacity:.25}.qq-upload-drop-area,.qq-upload-extra-drop-area{position:absolute;top:0;left:0;width:100%;height:100%;min-height:30px;z-index:2;background:#f9f9f9;border-radius:4px;border:1px dashed #ccc;text-align:center}.qq-upload-drop-area span{display:block;position:absolute;top:50%;width:100%;margin-top:-8px;font-size:16px}.qq-upload-extra-drop-area{position:relative;margin-top:50px;font-size:16px;padding-top:30px;height:20px;min-height:40px}.qq-upload-drop-area-active{background:#fdfdfd;border-radius:4px;border:1px dashed #ccc}.qq-upload-list{margin:0;padding:0;list-style:none;max-height:450px;overflow-y:auto;clear:both}.qq-upload-list li{margin:0;padding:9px;line-height:15px;font-size:16px;color:#424242;background-color:#f6f6f6;border-top:1px solid #fff;border-bottom:1px solid #ddd}.qq-upload-list li:first-child{border-top:none}.qq-upload-list li:last-child{border-bottom:none}.qq-upload-cancel,.qq-upload-continue,.qq-upload-delete,.qq-upload-failed-text,.qq-upload-file,.qq-upload-pause,.qq-upload-retry,.qq-upload-size,.qq-upload-spinner{margin-right:12px;display:inline}.qq-upload-file{vertical-align:middle;display:inline-block;width:300px;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;height:18px}.qq-upload-spinner{display:inline-block;background:url(loading.gif);width:15px;height:15px;vertical-align:text-bottom}.qq-drop-processing{display:block}.qq-drop-processing-spinner{display:inline-block;background:url(processing.gif);width:24px;height:24px;vertical-align:text-bottom}.qq-upload-cancel,.qq-upload-continue,.qq-upload-delete,.qq-upload-pause,.qq-upload-retry,.qq-upload-size{font-size:12px;font-weight:400;cursor:pointer;vertical-align:middle}.qq-upload-status-text{font-size:14px;font-weight:700;display:block}.qq-upload-failed-text{display:none;font-style:italic;font-weight:700}.qq-upload-failed-icon{display:none;width:15px;height:15px;vertical-align:text-bottom}.qq-upload-fail .qq-upload-failed-text,.qq-upload-retrying .qq-upload-failed-text{display:inline}.qq-upload-list li.qq-upload-success{background-color:#ebf6e0;color:#424242;border-bottom:1px solid #d3ded1;border-top:1px solid #f7fff5}.qq-upload-list li.qq-upload-fail{background-color:#f5d7d7;color:#424242;border-bottom:1px solid #decaca;border-top:1px solid #fce6e6}.qq-total-progress-bar{height:25px;border-radius:9px}INPUT.qq-edit-filename{position:absolute;opacity:0;z-index:-1}.qq-upload-file.qq-editable{cursor:pointer;margin-right:4px}.qq-edit-filename-icon.qq-editable{display:inline-block;cursor:pointer}INPUT.qq-edit-filename.qq-editing{position:static;height:28px;padding:0 8px;margin-right:10px;margin-bottom:-5px;border:1px solid #ccc;border-radius:2px;font-size:16px;opacity:1}.qq-edit-filename-icon{display:none;background:url(edit.gif);width:15px;height:15px;vertical-align:text-bottom;margin-right:16px}.qq-hide{display:none}.qq-thumbnail-selector{vertical-align:middle;margin-right:12px}.qq-uploader DIALOG{display:none}.qq-uploader DIALOG[open]{display:block}.qq-uploader DIALOG .qq-dialog-buttons{text-align:center;padding-top:10px}.qq-uploader DIALOG .qq-dialog-buttons BUTTON{margin-left:5px;margin-right:5px}.qq-uploader DIALOG .qq-dialog-message-selector{padding-bottom:10px}.qq-uploader DIALOG::-webkit-backdrop{background-color:rgba(0,0,0,.7)}.qq-uploader DIALOG::backdrop{background-color:rgba(0,0,0,.7)}'],encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:o.HttpClient},{type:f}]},e.propDecorators={openDialog:[{type:a.Input}],closeDialog:[{type:a.Output}],createDir:[{type:a.Output}]},e}(),P=function(){function e(){this.buttonClicked=new a.EventEmitter,this.buttonText=s._("Close").toString(),this.inputValue=""}return e.prototype.ngOnInit=function(){},e.prototype.onClick=function(){var e=this.uploadFolder.nativeElement;this.buttonClicked.emit(e.value)},e.prototype.onInputChange=function(e){this.inputValue=e.target.value,0<this.inputValue.length?this.buttonText=s._("Confirm").toString():this.buttonText=s._("Close").toString()},e.decorators=[{type:a.Component,args:[{selector:"app-new-folder",template:'<p class="new-folder-description" translate>Type new folder name</p>\n<input #uploadFolder placeholder="{{\'Folder name\' | translate}}" (keyup)="onInputChange($event)"\n       (keyup.enter)="onClick()" onclick="this.select();" type="text" class="new-folder-input"/>\n<button class="button new-folder-send" (click)="onClick()">{{buttonText | translate}}</button>\n',styles:[".new-folder-description{margin:0 auto;padding:0}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={uploadFolder:[{type:a.ViewChild,args:["uploadFolder"]}],buttonClicked:[{type:a.Output}]},e}(),O=function(){function e(){this.allowFolderDownload=!1,this.clickEvent=new a.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.onClick=function(e,t){this.clickEvent.emit({type:t,event:e,node:this.node})},e.decorators=[{type:a.Component,args:[{selector:"app-side-view",template:'<div class="side-view" *ngIf="node">\n  <div class="side-view-preview">\n    <i (click)="onClick($event, \'closeSideView\')" class="fas fa-times side-view-close"></i>\n\n    <div class="side-view-preview-title">{{node.name}}</div>\n\n    <div class="side-view-preview-content">\n      <ng-container\n        [ngTemplateOutletContext]="{$implicit: node}"\n        [ngTemplateOutlet]="sideViewTemplate">\n      </ng-container>\n    </div>\n\n    <div class="side-view-buttons">\n      <button (click)="onClick($event, \'download\')" class="button"\n              [disabled]="!allowFolderDownload && node.isFolder" translate>\n        Download\n      </button>\n      <button (click)="onClick($event, \'renameConfirm\')" class="button" translate>Rename</button>\n      <button (click)="onClick($event, \'removeAsk\')" class="button" translate>Delete</button>\n    </div>\n  </div>\n</div>\n',styles:[".side-view-close{position:absolute;cursor:pointer;top:0;right:0;padding:15px}.side-view-buttons{width:100%;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-flex-flow:column;flex-flow:column}.side-view-buttons .button{margin:5px 0}"],encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={sideViewTemplate:[{type:a.Input}],node:[{type:a.Input}],allowFolderDownload:[{type:a.Input}],clickEvent:[{type:a.Output}]},e}(),D=function(){function e(e){this.nodeClickedService=e}return e.prototype.ngOnInit=function(){},e.prototype.onClick=function(e){this.nodeClickedService.searchForString(e)},e.decorators=[{type:a.Component,args:[{selector:"app-navigation",template:'<div class="navigation-component">\n  <input #input class="navigation-search" onclick="this.select();" (keyup.enter)="onClick(input.value)"\n         placeholder="{{\'Search\' | translate}}">\n\n  <button [disabled]="input.value.length === 0" class="navigation-search-icon" (click)="onClick(input.value)">\n    <i class="fas fa-search"></i>\n  </button>\n\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n\n\n',styles:[".navigation-component{display:-webkit-flex;display:flex}"],encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:m}]},e}();function E(e){return new c.TranslateHttpLoader(e,"./assets/i18n/",".json")}var j=new a.InjectionToken("AppStore Reducers");function B(){return M}var L=E,_=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[l.TranslateService]}},e.decorators=[{type:a.NgModule,args:[{imports:[o.HttpClientModule,i.StoreModule.forRoot(j),p.CommonModule,n.NgxSmartModalModule.forRoot(),l.TranslateModule.forChild({loader:{provide:l.TranslateLoader,useFactory:L,deps:[o.HttpClient]}})],declarations:[v,y,x,b,q,w,C,T,N,F,P,O,D],exports:[v,T,O],providers:[{provide:j,useFactory:B}]}]}],e}(),A=function(){function e(e){this._currentPath="",this.config=e,this.nodes={id:0,pathToNode:"",pathToParent:null,isFolder:!0,isExpanded:!0,stayOpen:!0,name:"root",children:{}}}return Object.defineProperty(e.prototype,"currentPath",{get:function(){return this._currentPath},set:function(e){this._currentPath=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nodes",{get:function(){return this._nodes},set:function(e){this._nodes=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectedNodeId",{get:function(){return this._selectedNodeId},set:function(e){this._selectedNodeId=e},enumerable:!0,configurable:!0}),e}();e.FileManagerComponent=v,e.createTranslateLoader=E,e.getReducers=B,e.FileManagerModule=_,e.TreeModel=A,e.NodeService=f,e.ɵe=y,e.ɵk=T,e.ɵf=x,e.ɵn=P,e.ɵm=F,e.ɵj=C,e.ɵp=D,e.ɵo=O,e.ɵh=q,e.ɵg=b,e.ɵl=N,e.ɵi=w,e.ɵb=M,e.ɵd=I,e.ɵc=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng6-file-man.umd.min.js.map